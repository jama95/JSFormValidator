{"version":3,"file":"FormValidator.js","names":["options","ignoredFieldsNames","validMessageClass","invalidMessageClass","validClass","invalidClass","validLabelClass","invalidLabelClass","inlineMessageClass","topMessagesClass","validMessagesClass","invalidMessagesClass","validMessagesPosition","invalidMessagesPosition","topMessagesTemplate","scrollToTopOnInvalid","addValidClassOnAll","validateHiddenFields","validMessageCallback","undefined","invalidMessageCallback","form","parentField","fieldModifyAttribute","fieldValidateAttribute","fieldInvalidMessageAttribute","fieldValidMessageAttribute","fieldHelpMessageAttribute","modifyOnInput","validateOnInput","validateOnBlur","validateCheckboxRadioOnClick","showHelpMessagesOnFocus","addSuggestions","suggestionConfig","maxHeight","containerClass","optionClass","suggestionAttribute","lengthRestrictAttribute","lengthRestrictInfo","passwordSpecialChars","addPasswordInfo","passwordInfoClass","language","locale","currencyCode","dateFormat","timeFormat","validTitle","invalidTitle","notConfirmed","inv_required","inv_date","inv_time","inv_telephone","inv_ipv4","inv_ipv6","inv_domain","inv_email","inv_url","inv_numbers","inv_numberMax","inv_numberMin","inv_numberRange","inv_numberEqual","inv_numberStep","inv_lengthMax","inv_lengthMin","inv_lengthRange","inv_lengthEqual","inv_letters","inv_regexp","inv_alphanumeric","inv_color","inv_file_size","inv_file_type","inv_file_extension","inv_image_dimension","inv_image_heigh","inv_image_width","inv_image_ratio","inv_credit_card","inv_cvv","inv_confirmation","inv_security_answer","inv_strength","passwordConditionsTitle","passwordConditionUppercase","passwordConditionLowercase","passwordConditionSpecialChars","passwordConditionNumericChars","passwordConditionLength","passwordStrengthVeryWeak","passwordStrengthWeak","passwordStrengthNormal","passwordStrengthStrong","passwordStrengthVeryStrong","configuration","validators","asyncValidators","modifiers","stopValidation","onBeforeValidate","onValid","onInvalid","onAfterValidate","validMessages","invalidMessages","telephoneFormats","EC","cardInfo","AMEX","first","length","min","max","cvv","VISA","MAST","DISC","name","modifierFunction","value","toLowerCase","toUpperCase","capitalizedWords","sentenceCase","camel_pascal","input","d","getAttribute","currency","decimals","parseInt","hasAttribute","setAttribute","addEventListener","test","currencyFormat","trim","trimStart","trimEnd","validatorFunction","field","lang","format","check","checkDateFormat","invalidMessage","messageKey","checkTimeFormat","HTMLInputElement","type","querySelectorAll","lengthMessage","setLengthMessage","file","multiple","replace","val","checkbox","files","document","HTMLSelectElement","selectedOptions","checkStringLength","setNumberMessage","allow","split","includes","range","step","checkRangeStep","parseFloat","regex","RegExp","escapeRegExp","setAlphanumericMessage","flags","join","RGB","RGBA","HSL","HSLA","CMYK","HEX","colors","push","search","digits","map","Number","province_code","substring","checker","pop","tot","luhn","checkLasted","toCheck","slice","module11","sizeSTR","maxSize","sizeStringToBytes","Array","from","size","typeList","every","extensionList","lastIndexOf","dimension","width","height","dim","getImageDimensions","IPv4Regex","IPv4Prefix","IPv4Complete","IPv6Regex","IPv6Zone","IPv6Prefix","IPv6Mapped","IPv6Local","IPv6Complete","IPv6Full","zeros","ip","segments","flatMap","p","filter","s","OnlyOne0","noLeading0","startsWith","Reduced0","reducedIndex","indexOf","start0Index","zerosRule","domainRegex","endsWith","labels","TLD","subdomains","equal","i","Ipv4NoGroups","IPv6NoGroups","domainNoGroups","validCharacters","escapedCharacters","emailLocal","emailDomain","emailRegex","email","exec","parts","localPart","domainPart","IPv6ZoneNoGroupsURL","unreserved","sub_delimiters","percentEncoded","schemePart","authorityPart","pathPart","queryPart","fragmentPart","URLRegex","strength","checkPasswordStrength","setConfirmationMessage","custom","target","targetValue","querySelector","card","allowing","Object","keys","c","e","toString","creditCard","validateDateFormat","separator","count","fParts","dateRegex","part","date","charAt","dParts","day","month","year","Date","getDate","splitTime","tf","ms","r","timeRegex","time","tParts","hours","minutes","seconds","milliseconds","h24_h12","checkNumberRange","match","minOrMax","num1","num2","number1","number2","checkNumberStep","checkRangeAllowed","rangeVal","checkStepAllowed","stepVal","prt","Math","abs","toLocaleString","style","minimumFractionDigits","toFixed","str","toLocaleUpperCase","v","toLocaleLowerCase","notAccept","acceptHidden","acceptIgnored","hidden","ignore","not","triggerMessageCallback","isValid","message","password","sum","reverse","forEach","digit","factor","Promise","resolve","reader","FileReader","readAsDataURL","onload","image","Image","src","result","textAreaLengthRestriction","TextArea","info","container","createElement","classList","add","remaining","characterCount","innerText","position","backgroundColor","window","getComputedStyle","getElementsByTagName","left","getBoundingClientRect","marginLeft","marginTop","before","dispatchEvent","Event","ResizeObserver","observe","inputSuggestion","words","settings","w","currentFocus","datalist","display","id","fillDatalist","firstChild","removeChild","word","option","onclick","appendChild","scrollTo","no","setTimeout","regexp","key","preventDefault","simulateScroll","addActive","click","selected","remove","floor","offsetHeight","after","passwordInfo","additionalClass","content","innerHTML","strengthBar","condition","checkList","strengthLevel","fieldHelpMessage","span","textContent","dt","pi","getFieldParent","parent","parentElement","nodeName","getInvalidMessage","validator","getValidMessage","validMessage","setStyles","valid_invalid","fieldClass","fieldRemove","parentClass","parentRemove","labelClass","labelRemove","f","label","removeStyles","setInlineMessage","fieldName","insertAdjacentElement","setTopMessage","validView","invalidView","insertAdjacentHTML","removeInlineMessages","removeTopMessage","div","syncTopMessages","setMessage","isHidden","formReset","fields","toggleHelpMessage","show","addValidStyleInAllFields","FormValidate","constructor","opt","conf","triggerEvent","event","state","fns","fn","validateField","config","list","searchSyncValidators","console","error","validateFieldAsync","searchAsyncValidators","validateAllFields","valid","validateFieldController","validateAllFieldsAsync","element","modifyField","modifiersList","isForModifier","HTMLTextAreaElement","modifier","setDependantValidation","depending","fEvent","tEvent","_self","contains","setOptionalValidation","optional","isIgnored","isSkipped","isCheckOrRadio","validate","domFieldsFeatures","fieldsToIgnore","suggestions","restriction","ignoreField","isArray","validatorsList","asyncValidator","syncValidators","syncValidator","addEventListenersToFormFields","addEventListenersToForm","scrollIntoView","behavior","stopImmediatePropagation","removeAttribute","setUpFV","forms","noValidate","setSuggestions","setTextAreaLengthRestriction","t","setPasswordInfo","fromJSON","json","frm","fld","dataFV","data","dt_fv","addFormValidationEvent","eventFunction","getElementById","addValidator","addAsyncValidator","addModifier","restrict","reject","accept","acceptRegexp","acceptDefault","rejectRegexp","source","FormValidator"],"sources":["all.ts"],"sourcesContent":["//#region config\nconst options: Options = {\n  ignoredFieldsNames: \"\",\n  validMessageClass: \"valid-feedback\",\n  invalidMessageClass: \"invalid-feedback\",\n  validClass: \"is-valid\",\n  invalidClass: \"is-invalid\",\n  validLabelClass: \"text-success\",\n  invalidLabelClass: \"text-danger\",\n  inlineMessageClass: \"fv-msg\",\n  topMessagesClass: \"alert\",\n  validMessagesClass: \"alert-success\",\n  invalidMessagesClass: \"alert-danger\",\n  validMessagesPosition: \"inline\",\n  invalidMessagesPosition: \"inline\",\n  topMessagesTemplate: `<div class=\"{topMessagesClass} {valid_invalid}\" target=\"#{formID}\" data-fv-top-{vi}><h4>{title}</h4><ul>{fields&messagesList}</ul></div>`,\n  scrollToTopOnInvalid: false,\n  addValidClassOnAll: false,\n  validateHiddenFields: false,\n  validMessageCallback: undefined,\n  invalidMessageCallback: undefined,\n  form: \"form\",\n  parentField: \".fv-group\",\n  fieldModifyAttribute: \"data-fv-modifiers\",\n  fieldValidateAttribute: \"data-fv-validators\",\n  fieldInvalidMessageAttribute: \"data-fv-invalid-msg\",\n  fieldValidMessageAttribute: \"data-fv-valid-msg\",\n  fieldHelpMessageAttribute: \"data-fv-help-msg\",\n  modifyOnInput: true,\n  validateOnInput: false,\n  validateOnBlur: true,\n  validateCheckboxRadioOnClick: true,\n  showHelpMessagesOnFocus: true,\n  addSuggestions: true,\n  suggestionConfig: {\n    maxHeight: \"150px\",\n    containerClass: \"fv-suggestion_container\",\n    optionClass: \"fv-suggestion_option\",\n  },\n  suggestionAttribute: \"data-fv-suggestions\",\n  lengthRestrictAttribute: \"data-fv-text-length\",\n  lengthRestrictInfo: \"count\",\n  passwordSpecialChars: /[\\x21\\x40\\x23\\x24\\x25\\x5E\\x26\\x2A\\x5F\\x2D\\x2B\\x3D]/,\n  addPasswordInfo: true,\n  passwordInfoClass: \"card\",\n};\n\nconst language: Lang = {\n  locale: \"en-US\",\n  currencyCode: \"USD\",\n  dateFormat: \"YYYY-MM-DD\",\n  timeFormat: \"HH:mm:ss\",\n  validTitle: \"Valid form data!\",\n  invalidTitle: \"Invalid form data!\",\n  notConfirmed: \"Could not be validated.\",\n  inv_required: \"Is required.\",\n  inv_date: \"Is not a valid date.\",\n  inv_time: \"Is not a valid time.\",\n  inv_telephone: \"Is not a valid phone number.\",\n  inv_ipv4: \"Is not a valid IPv4 address.\",\n  inv_ipv6: \"Is not a valid IPv6 address.\",\n  inv_domain: \"Is not a valid domain.\",\n  inv_email: \"Is not a valid e-mail address.\",\n  inv_url: \"Is not a valid URL.\",\n  inv_numbers: \"Is not a valid number.\",\n  inv_numberMax: \"Must be less than or equal to {max}.\",\n  inv_numberMin: \"Must be greater than or equal to {min}.\",\n  inv_numberRange: \"Must match the range {range}.\",\n  inv_numberEqual: \"Must be equal to {equal}.\",\n  inv_numberStep: \"Must increase by {step}.\",\n  inv_lengthMax:\n    \"Must 1[have]1|2[choose]2 a maximum of {max} 3[character(s)]3|4[file(s)]4|5[option(s)]5.\",\n  inv_lengthMin:\n    \"Must 1[have]1|2[choose]2 a minimum of {min} 3[character(s)]3|4[file(s)]4|5[option(s)]5.\",\n  inv_lengthRange:\n    \"Must 1[have]1|2[choose]2 between {min} and {max} 3[characters]3|4[files]4|5[options]5.\",\n  inv_lengthEqual:\n    \"Must 1[have]1|2[choose]2 {equal} 3[character(s)]3|4[file(s)]4|5[option(s)]5.\",\n  inv_letters: \"Can oly contain letters.[ Also can contain {extra}]\",\n  inv_regexp: \"Is not a valid value.\",\n  inv_alphanumeric:\n    \"Can only contain letters and numbers.[ Also can contain {extra}]\",\n  inv_color: \"Is not a valid color format.\",\n  inv_file_size: \"File(s) size is too large (max: {max}).\",\n  inv_file_type: \"File(s) type must be: {type}.\",\n  inv_file_extension: \"File(s) extension must be: {extension}.\",\n  inv_image_dimension: \"Image(s) dimensions are not valid.\",\n  inv_image_heigh: \"Image(s) heigh must not exceed: {max}px.\",\n  inv_image_width: \"Image(s) width must not exceed: {max}px.\",\n  inv_image_ratio: \"Image aspect ratio is not valid.\",\n  inv_credit_card: \"Credit card number is not valid.\",\n  inv_cvv: \"CVV number is not valid.\",\n  inv_confirmation: \"[The values] do not match.\",\n  inv_security_answer: \"Security question answer is not valid.\",\n  inv_strength: \"Password is not strong enough.\",\n  passwordConditionsTitle: \"Password must contain:\",\n  passwordConditionUppercase: \"Uppercase letter(s).\",\n  passwordConditionLowercase: \"Lowercase letter(s).\",\n  passwordConditionSpecialChars: \"Special character(s).\",\n  passwordConditionNumericChars: \"Numeric character(s).\",\n  passwordConditionLength: \"At least 8 characters.\",\n  passwordStrengthVeryWeak: \"Very weak &#x1F628;\",\n  passwordStrengthWeak: \"Weak &#x1F61E;\",\n  passwordStrengthNormal: \"Normal &#x1F610;\",\n  passwordStrengthStrong: \"Strong &#x1F601;\",\n  passwordStrengthVeryStrong: \"Very Strong &#x1F60E;\",\n};\n\nconst configuration: Configuration = {\n  validators: {},\n  asyncValidators: {},\n  modifiers: {},\n  stopValidation: false,\n  onBeforeValidate: {},\n  onValid: {},\n  onInvalid: {},\n  onAfterValidate: {},\n  validMessages: {},\n  invalidMessages: {},\n  language: language,\n};\n\nconst telephoneFormats: TelephoneFormats = {\n  EC: [\n    /^(?:0|\\x2B593\\s?)(?:\\d{2}(?:\\s|-)?)\\d{3}(?:\\s|-)?\\d{4}$/,\n    /^(?:(?:0|\\x2B593\\s?)[2-7]\\s?)?\\d{7}$/,\n  ],\n};\n\nconst cardInfo: CardInfo = {\n  AMEX: { first: [3], length: { min: 15, max: 15 }, cvv: 4 },\n  VISA: { first: [4], length: { min: 16, max: 16 }, cvv: 3 },\n  MAST: { first: [2, 5], length: { min: 16, max: 16 }, cvv: 3 },\n  DISC: { first: [6], length: { min: 16, max: 16 }, cvv: 3 },\n};\n//#endregion config\n\n//#region modifiers\n/* Converts the text to lowercase */\nconfiguration.modifiers[\"lower\"] = {\n  name: \"lower\",\n  modifierFunction: function (value) {\n    return value.toLowerCase();\n  },\n};\n\n/* Converts the text to uppercase */\nconfiguration.modifiers[\"upper\"] = {\n  name: \"upper\",\n  modifierFunction: function (value) {\n    return value.toUpperCase();\n  },\n};\n\n/* Converts the first letter of each word in the text to uppercase */\nconfiguration.modifiers[\"capital\"] = {\n  name: \"capital\",\n  modifierFunction: function (value) {\n    return capitalizedWords(value);\n  },\n};\n\n/* Converts the first letter of the text to uppercase */\nconfiguration.modifiers[\"sentence\"] = {\n  name: \"sentence\",\n  modifierFunction: function (value) {\n    return sentenceCase(value);\n  },\n};\n\n/* Converts the first letter of each word in the text to uppercase and removes all the spaces */\nconfiguration.modifiers[\"camel\"] = {\n  name: \"camel\",\n  modifierFunction: function (value) {\n    return camel_pascal(value, false);\n  },\n  modifyOnInput: false,\n};\n\n/* Converts the first letter of each word(except for the first) in the text to uppercase and removes all the spaces */\nconfiguration.modifiers[\"pascal\"] = {\n  name: \"pascal\",\n  modifierFunction: function (value) {\n    return camel_pascal(value, true);\n  },\n  modifyOnInput: false,\n};\n\n/* Convert a number to currency format */\nconfiguration.modifiers[\"currency\"] = {\n  name: \"currency\",\n  modifierFunction: function (value, form, input) {\n    const d = input.getAttribute(\"data-fv-decimals\");\n    const locale = input.getAttribute(\"data-fv-locale\") ?? undefined,\n      currency = input.getAttribute(\"data-fv-currency\") ?? undefined,\n      decimals = d ? parseInt(d) : undefined;\n    if (!input.hasAttribute(\"data-fv-currency_original\")) {\n      input.setAttribute(\"data-fv-currency_original\", value);\n    }\n    input.addEventListener(\"focus\", () => {\n      input.value = input.getAttribute(\"data-fv-currency_original\") ?? value;\n    });\n    input.addEventListener(\"input\", () => {\n      input.setAttribute(\"data-fv-currency_original\", input.value);\n    });\n    value = input.getAttribute(\"data-fv-currency_original\") as string;\n    if (/[^\\d.]/.test(value)) return value;\n    return currencyFormat(value, language, locale, currency, decimals);\n  },\n  modifyOnInput: false,\n};\n\n/* Removes the leading and trailing white space and line terminator characters from a string */\nconfiguration.modifiers[\"trim\"] = {\n  name: \"trim\",\n  modifierFunction: function (value) {\n    return value.trim();\n  },\n  modifyOnInput: false,\n};\n\n/* Removes the leading white space and line terminator characters from a string */\nconfiguration.modifiers[\"trim_left\"] = {\n  name: \"trim_left\",\n  modifierFunction: function (value) {\n    return value.trimStart();\n  },\n  modifyOnInput: false,\n};\n\n/* Removes the trailing white space and line terminator characters from a string */\nconfiguration.modifiers[\"trim_right\"] = {\n  name: \"trim_right\",\n  modifierFunction: function (value) {\n    return value.trimEnd();\n  },\n  modifyOnInput: false,\n};\n//#endregion modifiers\n\n//#region date\n/* Checks if the field value matches with the specified date format */\nconfiguration.validators[\"date\"] = {\n  name: \"date\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const format = field.getAttribute(\"data-fv-date_format\") ?? lang.dateFormat;\n    const check = checkDateFormat(value, format);\n    if (check == \"no\") {\n      this.invalidMessage = lang.notConfirmed;\n      return false;\n    }\n    if (check == \"invalid\") {\n      this.invalidMessage = lang.inv_date;\n      return false;\n    }\n    return true;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"date\",\n};\n\n/* Checks if the field value matches with the specified time format   */\nconfiguration.validators[\"time\"] = {\n  name: \"time\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const format = field.getAttribute(\"data-fv-time_format\") ?? lang.timeFormat;\n    const check = checkTimeFormat(value, format);\n    if (check == \"no\") {\n      this.invalidMessage = lang.notConfirmed;\n      return false;\n    }\n    if (check == \"invalid\") {\n      this.invalidMessage = lang.inv_time;\n      return false;\n    }\n    return true;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"time\",\n};\n//#endregion date\n\n//#region default\n/* Checks if the field has a value */\nconfiguration.validators[\"required\"] = {\n  name: \"required\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const name = field.getAttribute(\"name\");\n    if (field instanceof HTMLInputElement && field.type == \"checkbox\") {\n      return (\n        form.querySelectorAll(`input[type=\"checkbox\"][name=\"${name}\"]:checked`)\n          .length > 0\n      );\n    } else if (field instanceof HTMLInputElement && field.type == \"radio\") {\n      return (\n        form.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]:checked`)\n          .length > 0\n      );\n    } else {\n      return value.trim().length > 0;\n    }\n  },\n  invalidMessage: language.inv_required,\n  messageKey: \"required\",\n};\n\nlet lengthMessage = language.notConfirmed;\n\n/**\n * Set the invalid length message\n * @param {boolean} file True if it is a file input\n * @param {boolean} multiple True if it is a multiple select\n * @param {boolean} check True if it is a checkbox input\n * @returns {string} Length message\n */\nfunction setLengthMessage(\n  file: boolean,\n  multiple: boolean,\n  check: boolean\n): string {\n  if (file)\n    return lengthMessage\n      .replace(/1\\x5B.+2\\x5B/, \"\")\n      .replace(\"]2\", \"\")\n      .replace(/3\\x5B.+4\\x5B/, \"\")\n      .replace(/\\x5D4.+\\x5D5/, \"\");\n  else if (multiple || check)\n    return lengthMessage\n      .replace(/1\\x5B.+2\\x5B/, \"\")\n      .replace(\"]2\", \"\")\n      .replace(/3\\x5B.+5\\x5B/, \"\")\n      .replace(\"]5\", \"\");\n  else\n    return lengthMessage\n      .replace(/\\x5D1.+\\x5D2/, \"\")\n      .replace(\"1[\", \"\")\n      .replace(/\\x5D3.+\\x5D5/, \"\")\n      .replace(\"3[\", \"\");\n}\n\n/* Checks if the field value has the correct length */\nconfiguration.validators[\"length\"] = {\n  name: \"length\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const length = field.getAttribute(\"data-fv-length\");\n    if (!length) {\n      this.invalidMessage = lang.notConfirmed;\n      return false;\n    }\n    let val = value.length,\n      file = false,\n      multiple = false,\n      checkbox = false;\n    if (\n      field instanceof HTMLInputElement &&\n      field.type == \"file\" &&\n      field.files\n    ) {\n      file = true;\n      val = field.files.length;\n    }\n    if (field instanceof HTMLInputElement && field.type == \"checkbox\") {\n      val = document.querySelectorAll(\n        `input[name=${field.name}]:checked`\n      ).length;\n      checkbox = true;\n    }\n    if (field instanceof HTMLSelectElement && field.hasAttribute(\"multiple\")) {\n      multiple = true;\n      val = field.selectedOptions.length;\n    }\n    const check = checkStringLength(val, length);\n    switch (check[0]) {\n      case \"max\":\n        lengthMessage = lang.inv_lengthMax.replace(\"{max}\", check[1]);\n        this.invalidMessage = setLengthMessage(file, multiple, checkbox);\n        return false;\n      case \"min\":\n        lengthMessage = lang.inv_lengthMin.replace(\"{min}\", check[1]);\n        this.invalidMessage = setLengthMessage(file, multiple, checkbox);\n        return false;\n      case \"range\":\n        lengthMessage = lang.inv_lengthRange\n          .replace(\"{max}\", check[2])\n          .replace(\"{min}\", check[1]);\n        this.invalidMessage = setLengthMessage(file, multiple, checkbox);\n        return false;\n      case \"equal\":\n        lengthMessage = lang.inv_lengthEqual.replace(\"{equal}\", check[1]);\n        this.invalidMessage = setLengthMessage(file, multiple, checkbox);\n        return false;\n      case \"no\":\n        this.invalidMessage = lang.notConfirmed;\n        return false;\n    }\n    return true;\n  },\n  invalidMessage: lengthMessage,\n  messageKey: \"length\",\n};\n\n/**\n * Set the invalid number message\n * @param {string[]} check Response of check function\n * @param {Lang} lang Language\n * @returns {string} Number message\n */\nfunction setNumberMessage(check: string[], lang: Lang): string {\n  switch (check[0]) {\n    case \"max\":\n      return lang.inv_numberMax.replace(\"{max}\", check[1]);\n    case \"min\":\n      return lang.inv_numberMin.replace(\"{min}\", check[1]);\n    case \"range\":\n      return lang.inv_numberRange.replace(\n        \"{range}\",\n        `${check[1]}::${check[2]}`\n      );\n    case \"equal\":\n      return lang.inv_numberEqual.replace(\"{equal}\", check[1]);\n    case \"step\":\n      return lang.inv_numberStep.replace(\"{step}\", check[1]);\n    default:\n      return lang.inv_numbers;\n  }\n}\n\n/* Checks if the field value contains only numbers and if it matches with the conditions */\nconfiguration.validators[\"numbers\"] = {\n  name: \"numbers\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const allow = (field.getAttribute(\"data-fv-numbers_allow\") ?? \"\").split(\n      /[,|-]+\\s*|\\s+/\n    );\n    if (allow.includes(\"noPositive\") && !value.includes(\"-\")) return false;\n    if (\n      !allow.includes(\"negative\") &&\n      !allow.includes(\"noPositive\") &&\n      value.includes(\"-\")\n    )\n      return false;\n    if (!allow.includes(\"decimal\") && value.includes(\".\")) return false;\n    if (/^-?\\d+(\\x2E\\d+)?$/.test(value)) {\n      const range = field.getAttribute(\"data-fv-numbers_range\") ?? \"\",\n        step = field.getAttribute(\"data-fv-numbers_step\") ?? \"\",\n        check = checkRangeStep(allow, parseFloat(value), range, step);\n      if (check[0][0] && check[0][0] != \"ok\") {\n        this.invalidMessage = setNumberMessage(check[0], lang);\n        return false;\n      }\n      if (check[1][0] && check[1][0] != \"ok\") {\n        this.invalidMessage = setNumberMessage(check[1], lang);\n        return false;\n      }\n    } else return false;\n    return true;\n  },\n  invalidMessage: language.inv_numbers,\n  messageKey: \"numbers\",\n};\n\n/* Checks if the field value contains only letters and/or the allowed characters */\nconfiguration.validators[\"letters\"] = {\n  name: \"letters\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const allow = field.getAttribute(\"data-fv-letters_allow\") ?? \"\";\n    const regex = new RegExp(`^[a-z${escapeRegExp(allow)}]+$`, \"i\");\n    if (!regex.test(value)) {\n      if (allow.length == 0)\n        this.invalidMessage = language.inv_letters.replace(/\\x5B.+\\x5D/, \"\");\n      else\n        this.invalidMessage = language.inv_letters\n          .replace(\"[\", \"\")\n          .replace(\"]\", \"\")\n          .replace(/\\x7B.+\\x7D/, allow);\n      return false;\n    }\n    return true;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"letters\",\n};\n\n/**\n * Set the invalid alphanumeric message\n * @param {string} allow Allowed characters\n * @returns {string} Alphanumeric message\n */\nfunction setAlphanumericMessage(allow: string): string {\n  if (allow.length == 0)\n    return language.inv_alphanumeric.replace(/\\x5B.+\\x5D/i, \"\");\n  else\n    return language.inv_alphanumeric\n      .replace(\"[\", \"\")\n      .replace(\"]\", \"\")\n      .replace(/\\x7B\\w+\\x7D/, allow);\n}\n\n/* Checks if the field value contains only numbers and/or letters and/or the allowed characters */\nconfiguration.validators[\"alphanumeric\"] = {\n  name: \"alphanumeric\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const allow = field.getAttribute(\"data-fv-letters_allow\") ?? \"\";\n    const regex = new RegExp(`^[a-z\\\\d${escapeRegExp(allow)}]+$`, \"i\");\n    if (!regex.test(value)) {\n      this.invalidMessage = setAlphanumericMessage(allow);\n      return false;\n    }\n    return true;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"alphanumeric\",\n};\n\n/* Checks if the field value matches with the specified regular expression */\nconfiguration.validators[\"regex\"] = {\n  name: \"regex\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const regex = field.getAttribute(\"data-fv-regex\") ?? \"\";\n    const flags = field.getAttribute(\"data-fv-flags\") ?? undefined;\n    if (!regex) return false;\n    return new RegExp(regex, flags).test(value);\n  },\n  invalidMessage: language.inv_regexp,\n  messageKey: \"regex\",\n};\n\n/* Checks if the field value matches with the specified time format   */\nconfiguration.validators[\"telephone\"] = {\n  name: \"telephone\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const format = field.getAttribute(\"data-fv-telephone_format\") ?? \"EC\";\n    if (telephoneFormats[format])\n      return new RegExp(\n        telephoneFormats[format].join(\"|\").replace(/\\//g, \"\")\n      ).test(value);\n    return false;\n  },\n  invalidMessage: language.inv_telephone,\n  messageKey: \"telephone\",\n};\n\n// Regex compatible with \"test\" and \"match\"\nconst RGB =\n  \"(rgb\\\\x28(25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})\\\\s*\\\\x2C\\\\s*(25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})\\\\s*\\\\x2C\\\\s*(25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})\\\\x29)\";\nconst RGBA =\n  \"(rgba\\\\x28(25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})\\\\s*\\\\x2C\\\\s*(25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})\\\\s*\\\\x2C\\\\s*(25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})\\\\s*\\\\x2C\\\\s*(0?\\\\x2E\\\\d+|[01])\\\\x29)\";\nconst HSL =\n  \"(hsl\\\\x28(360|3[0-5]\\\\d|[12]?\\\\d{1,2})\\\\s?\\\\x2C\\\\s?(100|[1-9]?\\\\d)\\\\x25\\\\s?\\\\x2C\\\\s?(100|[1-9]?\\\\d)\\\\x25\\\\x29)\";\nconst HSLA =\n  \"(hsla\\\\x28(360|3[0-5]\\\\d|[12]?\\\\d{1,2})\\\\s?\\\\x2C\\\\s?(100|[1-9]?\\\\d)\\\\x25\\\\s?\\\\x2C\\\\s?(100|[1-9]?\\\\d)\\\\x25\\\\s*\\\\x2C\\\\s*(0\\\\x2E\\\\d+|[01])\\\\x29)\";\nconst CMYK =\n  \"(CMYK\\\\x28(100|[1-9]?\\\\d)\\\\x25\\\\s?\\\\x2C\\\\s?(100|[1-9]?\\\\d)\\\\x25\\\\s?\\\\x2C\\\\s?(100|[1-9]?\\\\d)\\\\x25\\\\s*\\\\x2C\\\\s*(100|[1-9]?\\\\d)\\\\x25\\\\x29)\";\nconst HEX =\n  \"((?:\\\\x23(?:[a-f\\\\d]{2}){3}(?:[a-f\\\\d]{2})?)|(?:\\\\x23[a-f\\\\d]{3}[a-f\\\\d]?))\";\n\n/* Checks if the field value matches with the specified color formats   */\nconfiguration.validators[\"color\"] = {\n  name: \"color\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const colors = field.getAttribute(\"data-fv-colors\") ?? \"\";\n    const regex: string[] = [];\n    if (colors.trim().length == 0)\n      regex.push(`^${RGB}$|^${RGBA}$|^${HSL}$|^${HSLA}$|^${CMYK}$|^${HEX}$`);\n    else {\n      if (colors.search(/rgba?/i)) regex.push(`^${RGB}$|^${RGBA}$`);\n      if (colors.search(/hsla?/i)) regex.push(`^${HSL}$|^${HSLA}$`);\n      if (colors.search(/CMYK/i)) regex.push(`^${CMYK}$`);\n      if (colors.search(/(?:hex)|#/i)) regex.push(`^${HEX}$`);\n    }\n    const check = new RegExp(\n      regex.length > 1 ? regex.join(\"|\") : regex[0],\n      \"i\"\n    );\n    if (check.test(value)) return true;\n    return false;\n  },\n  invalidMessage: language.inv_color,\n  messageKey: \"color\",\n};\n//#endregion default\n\n//#region ec\n/* Checks if the field value has a real Ecuadorian identification card number */\nconfiguration.validators[\"ec_cedula\"] = {\n  name: \"ec_cedula\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (/\\D/.test(value)) return false;\n    if (value.length != 10) return false;\n    const digits = value.split(\"\").map(Number);\n    if (digits[2] >= 6) return false;\n    const province_code = parseInt(value.substring(0, 2));\n    if (province_code == 0 || province_code > 24 || province_code != 30)\n      return false;\n    const checker = digits.pop();\n    let tot = luhn(digits);\n    tot = checker != 0 ? 10 - tot : tot;\n    return tot === checker;\n  },\n  invalidMessage: \"El número de cédula no es válido.\",\n  messageKey: \"ec_cedula\",\n};\n\n/**\n * Checks the lasted numbers of the RUC\n * @param {number[]} digits Array of RUC numbers\n * @param {string} value String RUC number\n * @returns {boolean} True if is ok\n */\nfunction checkLasted(digits: number[], value: string): boolean {\n  if (digits[2] < 6 && value.substring(10) != \"001\") return false;\n  if (digits[2] == 9 && value.substring(10) == \"000\") return false;\n  if (digits[2] == 6 && value.substring(9) != \"0000\") return false;\n  return true;\n}\n\n/* Checks if the field value has a real Ecuadorian RUC number */\nconfiguration.validators[\"ec_ruc\"] = {\n  name: \"ec_ruc\",\n  validatorFunction: function (value, form, field, options) {\n    if (/\\D/.test(value)) return false;\n    if (value.length != 13) return false;\n    const digits = value.split(\"\").map(Number);\n    if (digits[2] == 7 || digits[2] == 8) return false;\n    const province_code = parseInt(value.substring(0, 2));\n    if (province_code == 0 || province_code > 24 || province_code != 30)\n      return false;\n    const toCheck = digits.slice(0, 10);\n    const check = digits[2] < 6 ? 10 : 11;\n    if (!checkLasted(digits, value)) return false;\n    if (digits[2] == 6) toCheck.pop();\n    const checker = toCheck.pop();\n    let tot = digits[2] < 6 ? luhn(digits) : module11(digits);\n    tot = checker != 0 ? check - tot : tot;\n    return tot === checker;\n  },\n  invalidMessage: \"El número de ruc no es válido\",\n  messageKey: \"ec_ruc\",\n};\n//#endregion ec\n\n//#region file\n/* Checks if the size of the selected files is correct  */\nconfiguration.validators[\"file_size\"] = {\n  name: \"file_size\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (field instanceof HTMLInputElement && field.type == \"file\") {\n      const files = field.files;\n      if (files) {\n        const sizeSTR = field.getAttribute(\"data-fv-file_max_size\") ?? \"5MB\";\n        const maxSize = sizeStringToBytes(sizeSTR);\n        let check = true;\n        for (const file of Array.from(files)) {\n          if (file.size > maxSize) {\n            check = false;\n            break;\n          }\n        }\n        if (!check) {\n          this.invalidMessage = lang.inv_file_size.replace(\"{max}\", sizeSTR);\n        }\n        return check;\n      }\n    }\n    return false;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"file_size\",\n};\n\n/* Checks if the selected files are of the correct MIME type */\nconfiguration.validators[\"file_type\"] = {\n  name: \"file_type\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (field instanceof HTMLInputElement && field.type === \"file\") {\n      const files = field.files;\n      if (files) {\n        const typeList = (field.getAttribute(\"data-fv-file_type\") ?? \"\").split(\n          /[,|-]+\\s*|\\s+/\n        );\n        const check = Array.from(files).every((file) =>\n          typeList.includes(file.type)\n        );\n        if (!check) {\n          this.invalidMessage = lang.inv_file_type.replace(\n            \"{type}\",\n            `(${typeList.join(\", \")})`\n          );\n        }\n        return check;\n      }\n    }\n    return false;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"file_type\",\n};\n\n/* Checks if the selected files has the correct extension */\nconfiguration.validators[\"file_extension\"] = {\n  name: \"file_extension\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (field instanceof HTMLInputElement && field.type === \"file\") {\n      const files = field.files;\n      if (files) {\n        const extensionList = (\n          field.getAttribute(\"data-fv-file_extension\") ?? \"\"\n        ).split(/[,|-]+\\s*|\\s+/);\n        const check = Array.from(files).every((file) =>\n          extensionList.includes(\n            file.name.slice(file.name.lastIndexOf(\".\") + 1)\n          )\n        );\n        if (!check) {\n          this.invalidMessage = lang.inv_file_extension.replace(\n            \"{extension}\",\n            `(${extensionList.join(\", \")})`\n          );\n        }\n        return check;\n      }\n    }\n    return false;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"file_extension\",\n};\n\n/* Checks if the selected images have the correct dimensions */\nconfiguration.asyncValidators[\"image_dimension\"] = {\n  name: \"image_dimension\",\n  validatorFunction: async function (value, form, field, options, lang) {\n    if (!(field instanceof HTMLInputElement && field.type === \"file\"))\n      return false;\n    const dimension = field.getAttribute(\"data-fv-image_dimension\") ?? \"\";\n    if (dimension.trim().length === 0) return false;\n    const files = field.files;\n    if (!files) return false;\n    const [width, height] = dimension.split(\"x\").map(Number);\n    let check = false;\n    for (const file of Array.from(files)) {\n      if (!file.type.includes(\"image\")) {\n        this.invalidMessage = lang.inv_file_type.replace(\"{type}\", \"image/*\");\n        check = false;\n        break;\n      }\n      const dim = await getImageDimensions(file);\n      check = dim[0] == width && dim[1] == height;\n      if (!check) {\n        this.invalidMessage = lang.inv_image_dimension;\n        break;\n      }\n    }\n    return check;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"image_dimension\",\n};\n\n/* Checks if the selected images have the correct height */\nconfiguration.asyncValidators[\"image_height\"] = {\n  name: \"image_height\",\n  validatorFunction: async function (value, form, field, options, lang) {\n    if (!(field instanceof HTMLInputElement && field.type === \"file\"))\n      return false;\n    const height = field.getAttribute(\"data-fv-image_height\") ?? \"\";\n    if (height.trim().length === 0) return false;\n    const files = field.files;\n    if (!files) return false;\n    let check = false;\n    for (const file of Array.from(files)) {\n      if (!file.type.includes(\"image\")) {\n        this.invalidMessage = lang.inv_file_type.replace(\"{type}\", \"image/*\");\n        check = false;\n        break;\n      }\n      const dim = await getImageDimensions(file);\n      check = dim[0] <= parseFloat(height);\n      if (!check) {\n        this.invalidMessage = lang.inv_image_heigh.replace(\"{max}\", height);\n        break;\n      }\n    }\n    return check;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"image_height\",\n};\n\n/* Checks if the selected images have the correct width */\nconfiguration.asyncValidators[\"image_width\"] = {\n  name: \"image_width\",\n  validatorFunction: async function (value, form, field, options, lang) {\n    if (!(field instanceof HTMLInputElement && field.type === \"file\"))\n      return false;\n    const width = field.getAttribute(\"data-fv-image_width\") ?? \"\";\n    if (width.trim().length === 0) return false;\n    const files = field.files;\n    if (!files) return false;\n    let check = false;\n    for (const file of Array.from(files)) {\n      if (!file.type.includes(\"image\")) {\n        this.invalidMessage = lang.inv_file_type.replace(\"{type}\", \"image/*\");\n        check = false;\n        break;\n      }\n      const dim = await getImageDimensions(file);\n      check = dim[0] <= parseFloat(width);\n      if (!check) {\n        this.invalidMessage = lang.inv_image_width.replace(\"{max}\", width);\n        break;\n      }\n    }\n    return check;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"image_width\",\n};\n//#endregion file\n\n//#region net\n// Regex according to RFC791 and RFC4632, compatible with \"test\" and \"match\"\nconst IPv4Regex =\n  \"((?:25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})(?:\\\\x2E(?:25[0-5]|2[0-4]\\\\d|1?\\\\d{1,2})){3})\";\nconst IPv4Prefix = \"(\\\\x2F(?:3[0-2]|[12]?\\\\d))?\";\nconst IPv4Complete = `${IPv4Regex}${IPv4Prefix}`;\n\n/* Checks if the field value has the correct format of an ipv4  */\nconfiguration.validators[\"ipv4\"] = {\n  name: \"ipv4\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const regex = new RegExp(`^${IPv4Complete}$`);\n    if (regex.test(value)) return true;\n    return false;\n  },\n  invalidMessage: language.inv_ipv4,\n  messageKey: \"ipv4\",\n};\n\n// Regex according to RFC4291, RFC4007 and RFC5952, compatible with \"test\" and \"match\"\nconst IPv6Regex =\n  \"(?:((?:[\\\\da-f]{1,4}\\\\x3A){7}[\\\\da-f]{1,4})|((?:[\\\\da-f]{1,4}\\\\x3A){1,6}\\\\x3A)|((?:[\\\\da-f]{1,4}\\\\x3A){1,5}\\\\x3A[\\\\da-f]{1,4})|((?:[\\\\da-f]{1,4}\\\\x3A){1,4}(?:\\\\x3A[\\\\da-f]{1,4}){1,2})|((?:[\\\\da-f]{1,4}\\\\x3A){1,3}(?:\\\\x3A[\\\\da-f]{1,4}){1,3})|((?:[\\\\da-f]{1,4}\\\\x3A){1,2}(?:\\\\x3A[\\\\da-f]{1,4}){1,4})|((?:[\\\\da-f]{1,4}\\\\x3A)(?:\\\\x3A[\\\\da-f]{1,4}){1,5})|(\\\\x3A(?:(?:\\\\x3A[\\\\da-f]{1,4}){1,6}|\\\\x3A)))\";\nconst IPv6Zone = \"(\\\\x25[\\\\da-zA-Z\\\\x2D\\\\x5F]+)?\";\nconst IPv6Prefix = \"(\\\\x2F(?:1[0-2][0-8]?|\\\\d\\\\d?))?\";\nconst IPv6Mapped = `((\\\\x3A\\\\x3Affff\\\\x3A)${IPv4Regex}${IPv6Zone})`;\nconst IPv6Local = `(?:(fe80(?:(?:\\\\x3A[\\\\da-f]{1,4}){7}|(?:(?:\\\\x3A[\\\\da-f]{1,4}){1,5}\\\\x3A\\\\x3A)|(?:(?:\\\\x3A[\\\\da-f]{1,4}){4}\\\\x3A(?:\\\\x3A[\\\\da-f]{1,4}))|(?:(?:\\\\x3A[\\\\da-f]{1,4}){3}\\\\x3A(?:\\\\x3A[\\\\da-f]{1,4}){1,2})|(?:(?:\\\\x3A[\\\\da-f]{1,4}){2}\\\\x3A(?:\\\\x3A[\\\\da-f]{1,4}){1,3})|(?:(?:\\\\x3A[\\\\da-f]{1,4}){1}\\\\x3A(?:\\\\x3A[\\\\da-f]{1,4}){1,4})|(?:\\\\x3A(?:(?:\\\\x3A[\\\\da-f]{1,4}){1,5}|\\\\x3A))))${IPv6Zone})`;\nconst IPv6Complete = `(${IPv6Regex}${IPv6Zone}${IPv6Prefix})`;\nconst IPv6Full = `^${IPv6Mapped}$|^${IPv6Local}$|^${IPv6Complete}$`;\n\n/**\n * Checks the zeros rule in the ipv6 address\n * @param {string} ip ipv6 address\n * @returns {boolean}\n */\nfunction zeros(ip: string): boolean {\n  const segments = ip\n    .split(\"::\")\n    .flatMap((p) => p.split(\":\"))\n    .filter((s) => s.length > 0);\n  const OnlyOne0 = segments.filter((s) => /^(0{2,4})$/.test(s));\n  if (OnlyOne0.length > 0) return false;\n  if (/^(0\\x3A){7}0$/.test(ip)) return false;\n  const noLeading0 = segments.filter((s) => s === \"0\" || !s.startsWith(\"0\"));\n  if (noLeading0.length != segments.length) return false;\n  if (/\\x3A\\x3A/.test(ip)) {\n    if (/(^|\\x3A)0\\x3A\\x3A|\\x3A\\x3A0(\\x3A|$)/.test(ip)) return false;\n    const Reduced0 = 8 - segments.length;\n    const zeros = segments.map((s) => (s == \"0\" ? s : \"-\")).join(\"\");\n    if (new RegExp(`0{${Reduced0 + 1},}`).test(zeros)) return false;\n    if (/0{2,}/.test(zeros)) {\n      const reducedIndex = ip.indexOf(\"::\");\n      const start0Index = zeros.search(/0{2,}/);\n      if (start0Index > reducedIndex) return false;\n    }\n  }\n  return true;\n}\n\n/* Checks if the field value has the correct format of an ipv6 */\nconfiguration.validators[\"ipv6\"] = {\n  name: \"ipv6\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const zerosRule = field.getAttribute(\"data-fv-ipv6_zeros\") == \"true\";\n    const regex = new RegExp(`${IPv6Full}`);\n    if (regex.test(value)) {\n      if (!new RegExp(IPv4Regex).test(value)) {\n        value = value.replace(new RegExp(IPv6Prefix.slice(0, -1)), \"\");\n        value = value.replace(new RegExp(IPv6Zone.slice(0, -1)), \"\");\n        if (zerosRule) return zeros(value);\n      }\n      return true;\n    }\n    return false;\n  },\n  invalidMessage: language.inv_ipv6,\n  messageKey: \"ipv6\",\n};\n\n// Regex according to RFC1034, RFC1035 and RFC3696, compatible with \"test\" and \"match\"\nconst domainRegex =\n  \"(((?:[a-z][a-z\\\\d\\\\x2D]{0,61}[a-z\\\\d]?\\\\x2E)+)([a-z\\\\d][a-z\\\\d\\\\x2D]*[a-z\\\\d]\\\\x2E?))\";\n\n/* Checks if the field value has the correct format of a domain name */\nconfiguration.validators[\"domain\"] = {\n  name: \"domain\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (value.length > 253) return false;\n    if (/\\x2D{2,}/g.test(value)) return false;\n    const regex = new RegExp(`^${domainRegex}$`, \"i\");\n    if (!regex.test(value)) return false;\n    if (value.endsWith(\".\")) value = value.slice(0, -1);\n    const labels = value.split(\".\");\n    const TLD = labels.pop();\n    if (TLD?.search(/[^A-Z]/)) return false;\n    const subdomains = labels;\n    subdomains.filter((s) => /\\x2D{2,}/.test(s));\n    if (subdomains.length != labels.length) return false;\n    let equal = false;\n    for (let i = 0; i <= labels.length - 2; i++) {\n      if (labels[i].toUpperCase() == labels[i + 1].toUpperCase()) {\n        equal = true;\n        break;\n      }\n    }\n    return !equal;\n  },\n  invalidMessage: language.inv_domain,\n  messageKey: \"domain\",\n};\n\nconst Ipv4NoGroups = IPv4Regex.replace(\"((?:\", \"(?:(?:\");\nconst IPv6NoGroups = IPv6Regex.replace(/\\x28\\x28\\x3F\\x3A/g, \"(?:(?:\").replace(\n  \"|(\\\\x3A\",\n  \"|(?:\\\\x3A\"\n);\nconst domainNoGroups = domainRegex\n  .replace(\"((\", \"(?:(?:\")\n  .replace(\")(\", \")(?:\");\n\n// Regex according to RFC5321, RFC5322 and RFC3696, compatible with \"test\" and \"match\"\nconst validCharacters =\n  \"\\\\x21\\\\x23\\\\x24\\\\x25\\\\x26\\\\x2A\\\\x2B\\\\x2D\\\\x2E\\\\x2F\\\\x3D\\\\x3F\\\\x5E\\\\x7B\\\\x7C\\\\x7D\\\\x7E\\\\u02BC\\\\u02BD\";\nconst escapedCharacters = \"\\\\x22\\\\x2C\\\\x40\\\\x5B\\\\x5C\\\\x5D\";\nconst emailLocal = `((?:\\\\w|\\\\d|[${validCharacters}]|(?:\\\\x5C[${escapedCharacters}]))*|(?:\\\\x22(?:\\\\w|\\\\d|[${validCharacters}${escapedCharacters}])*\\\\x22))`;\nconst emailDomain = `(${domainRegex}|(?:\\\\x5B${Ipv4NoGroups}\\\\x5D)|(?:Ipv6:\\\\x5B${IPv6NoGroups}\\\\x5D))`;\nconst emailRegex = `(${emailLocal}\\\\x40${emailDomain})`;\n\n/* Checks is the field value has the correct format of an e-mail address */\nconfiguration.validators[\"email\"] = {\n  name: \"email\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (value.startsWith(\".\")) return false;\n    if (value.endsWith(\".\")) return false;\n    if (value.length > 254) return false;\n    const regex = new RegExp(`^${emailRegex}$`, \"i\");\n    const email = RegExp(regex).exec(value);\n    if (!email) return false;\n    const parts = [...email];\n    const localPart = parts[2];\n    const domainPart = parts[3];\n    if (localPart.length > 64) return false;\n    if (localPart.endsWith(\".\") || localPart.includes(\"..\")) return false;\n    if (!domainPart.includes(\"[\"))\n      if (\n        !configuration.validators[\"domain\"].validatorFunction(\n          domainPart,\n          form,\n          field,\n          options,\n          lang\n        )\n      )\n        return false;\n    return true;\n  },\n  invalidMessage: language.inv_email,\n  messageKey: \"email\",\n};\n\nconst IPv6ZoneNoGroupsURL = IPv6Zone.replace(\"(\\\\x25\", \"(?:\\\\x2525\");\n\n// Regex according to RFC1738, RFC3986 and RFC6874, compatible with \"test\" and \"match\"\nconst unreserved = \"a-z\\\\d\\\\x2D\\\\x2E\\\\x5F\\\\x7E\";\nconst sub_delimiters =\n  \"\\\\x21\\\\x24\\\\x26\\\\x27\\\\x28\\\\x29\\\\x2A\\\\x2B\\\\x2C\\\\x3B\\\\x3D\";\nconst percentEncoded = \"(?:\\\\x25[a-f\\\\d]{2})\";\nconst schemePart = \"(https?\\\\x3A)\"; //\"([a-z\\\\d\\\\x2B\\\\x2D\\\\x2C]+\\\\x3A)\";\nconst authorityPart = `(\\\\x2F\\\\x2F((?:[${unreserved}${sub_delimiters}\\\\x3A]|${percentEncoded})+\\\\x40)?(localhost|${domainNoGroups}|(?:\\\\x5B(?:${IPv6NoGroups}${IPv6ZoneNoGroupsURL})\\\\x5D)|${Ipv4NoGroups})(\\\\x3A\\\\d+)?\\\\x2F?)`;\nconst pathPart = `((?:\\\\x2F(?:[${unreserved}${sub_delimiters}\\\\x3A\\\\x40]|${percentEncoded})+)*)`;\nconst queryPart = `(\\\\x3F(?:[${unreserved}${sub_delimiters}\\\\x2F\\\\x3A\\\\x3F\\\\x40]|${percentEncoded})+)?`;\nconst fragmentPart = `(\\\\x23(?:[${unreserved}${sub_delimiters}\\\\x2F\\\\x3A\\\\x3F\\\\x40]|${percentEncoded})+)?`;\nconst URLRegex = `(${schemePart}${authorityPart}${pathPart}${queryPart}${fragmentPart})`;\n\n/* Checks if the field value is has the correct format of an URL */\nconfiguration.validators[\"url\"] = {\n  name: \"url\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const regex = new RegExp(`^${URLRegex}$`, \"i\");\n    if (!regex.test(value)) return false;\n    return true;\n  },\n  invalidMessage: language.inv_url,\n  messageKey: \"url\",\n};\n//#endregion net\n\n//#region security\n/* Checks if the field has a strong password */\nconfiguration.validators[\"password\"] = {\n  name: \"password\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const min = parseInt(field.getAttribute(\"data-fv-min_strength\") ?? \"5\", 10);\n    const strength = checkPasswordStrength(value).strength;\n    if (strength >= min) return true;\n    return false;\n  },\n  invalidMessage: language.inv_strength,\n  messageKey: \"password\",\n};\n\n/**\n * Set the invalid confirmation value message\n * @param {string} custom Custom value name\n * @param {Lang} lang Language\n * @returns {string} Confirmation message\n */\nfunction setConfirmationMessage(custom: string, lang: Lang): string {\n  if (custom.length > 0) {\n    return lang.inv_confirmation.replace(/\\x5B.+\\x5D/g, custom);\n  } else {\n    return lang.inv_confirmation.replace(\"[\", \"\").replace(\"]\", \"\");\n  }\n}\n\n/* Checks if the field value matches the target value */\nconfiguration.validators[\"confirmation\"] = {\n  name: \"confirmation\",\n  validatorFunction: function (value, form, field, options, lang) {\n    const target = field.getAttribute(\"data-fv-target\") ?? \"\";\n    if (target.trim() === \"\") return false;\n    const custom = field.getAttribute(\"data-fv-custom_value_message\") ?? \"\";\n    const targetValue = document.querySelector<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >(target)?.value;\n    if (targetValue !== value) {\n      this.invalidMessage = setConfirmationMessage(custom, lang);\n      return false;\n    }\n    return true;\n  },\n  invalidMessage: language.notConfirmed,\n  messageKey: \"confirmation\",\n};\n\n/* Checks if the field value has a valid credit/debit card number */\nconfiguration.validators[\"credit_card\"] = {\n  name: \"credit_card\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (/\\D/.test(value)) return false;\n    let card = \"unknown\";\n    let min = 16;\n    let max = 19;\n    const allowing = (\n      field.getAttribute(\"data-fv-allowed_cards\") ??\n      Object.keys(cardInfo).join(\",\")\n    ).split(/[,|-]+\\s*|\\s+/);\n    allowing.filter((c) => Object.keys(cardInfo).includes(c.toUpperCase()));\n    for (const c of allowing) {\n      for (const e of cardInfo[c].first) {\n        if (value.startsWith(e.toString())) {\n          card = c;\n          min = cardInfo[c].length.min;\n          max = cardInfo[c].length.max;\n          break;\n        }\n      }\n      if (card !== \"unknown\") break;\n    }\n    field.setAttribute(\"data-fv-card\", card);\n    const digits = value.split(\"\").map(Number);\n    if (digits.length < min || digits.length > max) return false;\n    return luhn(digits) === 0;\n  },\n  invalidMessage: language.inv_credit_card,\n  messageKey: \"credit_card\",\n};\n\n/* Checks if the field value has a valid CVV number */\nconfiguration.validators[\"cvv\"] = {\n  name: \"cvv\",\n  validatorFunction: function (value, form, field, options, lang) {\n    if (/\\D/.test(value)) return false;\n    const target = field.getAttribute(\"data-fv-target\") ?? \"\";\n    if (target.trim() === \"\") return false;\n    const creditCard = document\n      .querySelector<\n        HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n      >(target)\n      ?.getAttribute(\"data-fv-card\");\n    if (!creditCard) return false;\n    if (creditCard !== \"unknown\") {\n      return cardInfo[creditCard].cvv === value.length;\n    } else {\n      return value.length < 3 || value.length > 4;\n    }\n  },\n  invalidMessage: language.inv_cvv,\n  messageKey: \"cvv\",\n};\n//#endregion security\n\n//#region utils\n/**\n * Check if the format is correct\n * @param {string} format Date format\n * @param {string} separator Date format separator\n * @returns {boolean} True if is correct\n */\nfunction validateDateFormat(format: string, separator: string): boolean {\n  if (/[A-Z0-9]/.test(separator)) return false;\n  const count = (RegExp(new RegExp(`\\\\${separator}`)).exec(format) ?? [])\n    .length;\n  if (format.replace(separator, \"\").length != format.length - count)\n    return false;\n  if (new RegExp(`[^YMD${separator}]`).test(format)) return false;\n  const fParts = format.split(separator);\n  switch (fParts.length) {\n    case 3:\n      if (\n        !fParts.includes(\"YYYY\") &&\n        !fParts.includes(\"MM\") &&\n        !fParts.includes(\"DD\")\n      )\n        return false;\n      break;\n    case 2:\n      if (!fParts.includes(\"YYYY\") && !fParts.includes(\"MM\")) return false;\n      break;\n    case 1:\n      if (!fParts.includes(\"YYYY\")) return false;\n      break;\n    default:\n      return false;\n  }\n  return true;\n}\n\n/**\n * Prepare the regexp for check the date format\n * @param {string} format Date format\n * @param {string} separator Date format separator\n * @returns {string} Regexp based in the date format\n */\nfunction dateRegex(format: string, separator: string): string {\n  return (\n    \"^\" +\n    format\n      .split(separator)\n      .map((part) => {\n        if (part.includes(\"YYYY\")) return `\\\\d{4}`;\n        else return `\\\\d{2}`;\n      })\n      .join(`\\\\${separator}`) +\n    \"$\"\n  );\n}\n\n/**\n * Checks if the date matches the date format.\n\n * ** Only supports date with number format.\n * @param {string} date Date\n * @param {string} format Number date format: (DD) for day, (MM) for month, (YYYY) for year\n * @returns {string} Returns invalid, ok if is valid or no if the format is incorrect\n */\nfunction checkDateFormat(date: string, format: string): string {\n  const separator = format.toUpperCase().replace(/[DMY]/g, \"\").charAt(0);\n  if (!validateDateFormat(format.toUpperCase(), separator)) return \"no\";\n  const regex = dateRegex(format.toUpperCase(), separator);\n  if (!new RegExp(regex).test(date)) return \"invalid\";\n  const dParts = date.split(separator),\n    fParts = format.toUpperCase().split(separator);\n  const day = parseInt(dParts[fParts.indexOf(\"DD\")], 10),\n    month = parseInt(dParts[fParts.indexOf(\"MM\")], 10),\n    year = parseInt(dParts[fParts.indexOf(\"YYYY\")], 10);\n  if (year < 0 || year > 9999) return \"invalid\";\n  if (fParts.length > 1)\n    if (month && (month < 1 || month > 12)) return \"invalid\";\n  if (fParts.length == 3) {\n    if (day && (day < 1 || day > new Date(year, month - 1, 0).getDate()))\n      return \"invalid\";\n  }\n  return \"ok\";\n}\n\n/**\n * Splits the time into an array\n * @param {string} tf Time to split\n * @returns {string[]} [HH,mm,ss,sss?]\n */\nfunction splitTime(tf: string): string[] {\n  const ms = tf.split(\".\"),\n    r = [...ms[0].split(\":\")];\n  if (ms[1]) r.push(ms[1]);\n  return r;\n}\n\n/**\n * Prepare the regexp for check the time format\n * @param {string} format Time format\n * @returns {string} Regexp based in the time format\n */\nfunction timeRegex(format: string): string {\n  return (\n    \"^\" +\n    format\n      .replace(\"A\", \"\")\n      .split(\":\")\n      .map((part) => {\n        if (part.includes(\".\")) return `\\\\d{2}\\\\x2E\\\\d{3}`;\n        return `\\\\d{2}`;\n      })\n      .join(`\\\\x3A`) +\n    (format.lastIndexOf(\"A\") > -1 ? \"(a\\\\s?m|p\\\\s?m|a.\\\\s?m.|p.\\\\s?m.)\" : \"\") +\n    \"$\"\n  );\n}\n\n/**\n * Checks if the time matches the time format.\n * A valid format could be: HH:mm:ss.sssA HH:mm:ssA HH:mmA\n * @param {string} time Time\n * @param {string} format Time format: (HH) for Hours, (mm) for minutes, (ss) for seconds, (sss) for milliseconds, (A) for AM/PM\n * @returns {string} Returns invalid, ok if is valid or no if the format is incorrect\n */\nfunction checkTimeFormat(time: string, format: string): string {\n  if (!/^(HH\\x3Amm)((\\x3Ass)|(\\x3Ass\\x2Esss))?(A)?$/.test(format)) return \"no\";\n  const regex = timeRegex(format);\n  if (!new RegExp(regex, \"i\").test(time)) return \"invalid\";\n  const tParts = splitTime(time.replace(/a\\s?m|p\\s?m|a.\\s?m.|p.\\s?m./i, \"\")),\n    fParts = splitTime(format.replace(\"A\", \"\"));\n  const hours = parseInt(tParts[fParts.indexOf(\"HH\")], 10),\n    minutes = parseInt(tParts[fParts.indexOf(\"mm\")], 10),\n    seconds = parseInt(tParts[fParts.indexOf(\"ss\")], 10),\n    milliseconds = parseInt(tParts[fParts.indexOf(\"sss\")], 10),\n    h24_h12 = format.search(/A/) == -1 ? 23 : 12;\n  if (hours < 0 || hours > h24_h12) return \"invalid\";\n  if (minutes < 0 || minutes > 59) return \"invalid\";\n  if (seconds && (seconds < 0 || seconds > 59)) return \"invalid\";\n  if (milliseconds && (milliseconds < 0 || milliseconds > 999))\n    return \"invalid\";\n  return \"ok\";\n}\n\n/**\n * Checks if a number matches with a specific range\n * @param {number} value Number to check\n * @param {string} range Accepted range\n * @returns {string} Returns ok or the unfulfilled range\n */\nfunction checkNumberRange(value: number, range: string): string[] {\n  if (range.includes(\"::\") && (range.includes(\"max\") || range.includes(\"min\")))\n    return [\"no\"];\n  const match = RegExp(\n    /^(min|max)?((?:-?)\\d+(?:\\x2E\\d+)?)(?:\\x3A\\x3A((?:-?)\\d+(?:\\x2E\\d+)?))?$/\n  ).exec(range);\n  if (!match) return [\"no\"];\n  const [, minOrMax, num1, num2] = match,\n    min = minOrMax === \"min\",\n    max = minOrMax === \"max\",\n    number1 = parseFloat(num1),\n    number2 = num2 ? parseFloat(num2) : undefined;\n  if (min && value < number1) return [\"min\", num1];\n  if (max && value > number1) return [\"max\", num1];\n  if (number2 !== undefined && (value < number1 || value > number2))\n    return [\"range\", num1, num2];\n  if (!min && !max && number2 === undefined && value !== number1)\n    return [\"equal\", num1];\n  return [\"ok\"];\n}\n\n/**\n * Checks if a number satisfies with the step\n * @param {number} value Number to check\n * @param {string} step Step\n * @returns {string[]} Returns ok or the unfulfilled step\n */\nfunction checkNumberStep(value: number, step: string): string[] {\n  const regex = /^-?\\d+(\\x2E\\d+)?$/;\n  if (!regex.test(step)) return [\"no\"];\n  const s = parseFloat(step);\n  if (value % s !== 0) return [\"step\", step];\n  return [\"ok\"];\n}\n\n/**\n * Checks if the range value matches with the allowed numbers\n * @param {string[]} allow Allowed numbers options\n * @param {string} rangeVal Range value\n * @returns {string[]} Returns no if no match\n */\nfunction checkRangeAllowed(allow: string[], rangeVal: string): string[] {\n  let r: string[] = [\"ok\"];\n  if (allow.includes(\"noPositive\") && !rangeVal.includes(\"-\")) r = [\"no\"];\n  if (\n    !allow.includes(\"negative\") &&\n    !allow.includes(\"noPositive\") &&\n    rangeVal.includes(\"-\")\n  )\n    r = [\"no\"];\n  if (!allow.includes(\"decimal\") && rangeVal.includes(\".\")) r = [\"no\"];\n  return r;\n}\n\n/**\n * Checks if the step value matches with the allowed numbers\n * @param {string[]} allow Allowed numbers options\n * @param {string} stepVal Step value\n * @returns {string[]} Returns no if no match\n */\nfunction checkStepAllowed(allow: string[], stepVal: string): string[] {\n  let s: string[] = [\"ok\"];\n  if (allow.includes(\"noPositive\") && !stepVal.includes(\"-\")) s = [\"no\"];\n\n  if (\n    !allow.includes(\"negative\") &&\n    !allow.includes(\"noPositive\") &&\n    stepVal.includes(\"-\")\n  )\n    s = [\"no\"];\n  if (!allow.includes(\"decimal\") && stepVal.includes(\".\")) s = [\"no\"];\n  return s;\n}\n\n/**\n * Check if the number match the range or the step\n * @param {string[]} allow Allowed numbers options\n * @param {number} value Number to check\n * @param {string} rangeVal The range\n * @param {string} stepVal The step\n * @returns {string[][]} The response of range and step check\n */\nfunction checkRangeStep(\n  allow: string[],\n  value: number,\n  rangeVal: string,\n  stepVal: string\n): string[][] {\n  let check: string[][] = [],\n    r: string[] = [\"ok\"],\n    s: string[] = [\"ok\"];\n  if (allow.includes(\"range\")) {\n    r = checkRangeAllowed(allow, rangeVal);\n    if (r[0] == \"ok\") r = checkNumberRange(value, rangeVal);\n  }\n  if (allow.includes(\"step\")) {\n    s = checkStepAllowed(allow, stepVal);\n    if (s[0] == \"ok\") s = checkNumberStep(value, stepVal);\n  }\n  check = [[...r], [...s]];\n  return check;\n}\n\n/**\n * Checks if the string length matches with a specific range\n * @param {number} value Length to check\n * @param {string} range Accepted range\n * @returns {string} Returns ok or the unfulfilled range\n */\nfunction checkStringLength(value: number, range: string): string[] {\n  if (range.includes(\"::\") && (range.includes(\"max\") || range.includes(\"min\")))\n    return [\"no\"];\n  const match = RegExp(/^(min|max)?(\\d+)(?:\\x3A\\x3A(\\d+))?$/).exec(range);\n  if (!match) return [\"no\"];\n  const [, minOrMax, num1, num2] = match,\n    min = minOrMax === \"min\",\n    max = minOrMax === \"max\",\n    number1 = parseInt(num1, 10),\n    number2 = num2 ? parseInt(num2, 10) : undefined;\n  if (min && value < number1) return [\"min\", num1];\n  if (max && value > number1) return [\"max\", num1];\n  if (number2 !== undefined && (value < number1 || value > number2))\n    return [\"range\", num1, num2];\n  if (!min && !max && number2 === undefined && value !== number1)\n    return [\"equal\", num1];\n  return [\"ok\"];\n}\n\n/**\n * Convert a number to currency format\n * @param {string} value Number to convert\n * @param {Lang} lang Form Validator language\n * @param {?(string|string[])} [locale] List of language and region codes (for more information see \"BCP 47 language tags\")\n * @param {?string} [currency] Currency code (for more information se \"ISO 4217 standard\")\n * @param {?number} [decimals] Number of fixed decimal numbers to be displayed\n * @returns {string} Converted number\n */\nfunction currencyFormat(\n  value: string,\n  lang: Lang,\n  locale?: string | string[],\n  currency?: string,\n  decimals?: number\n): string {\n  if (!/^\\d+(\\.\\d+)?$/.test(value)) return value;\n  if (!decimals) {\n    const prt = value.split(\".\");\n    decimals = prt.length;\n  }\n  locale = !locale ? lang.locale : locale;\n  currency = !currency ? lang.currencyCode : currency;\n  decimals = Math.abs(decimals) > 100 ? 100 : Math.abs(decimals);\n  try {\n    return parseFloat(value).toLocaleString(locale, {\n      style: \"currency\",\n      currency: currency,\n      minimumFractionDigits: decimals,\n    });\n  } catch {\n    return parseFloat(value).toFixed(decimals);\n  }\n}\n\n/**\n * Converts the first letter of the text to uppercase\n * @param {string} str Text to convert\n * @returns {string} Converted text\n */\nfunction sentenceCase(str: string): string {\n  return str.charAt(0).toLocaleUpperCase() + str.slice(1);\n}\n\n/**\n * Converts the first letter of each word in the text to uppercase\n * @param {string} str Text to convert\n * @returns {string} Converted text\n */\nfunction capitalizedWords(str: string): string {\n  return str\n    .split(/\\s/g)\n    .map((v) => sentenceCase(v))\n    .join(\" \");\n}\n\n/**\n * Converts the text in camelCase or pascalCase\n * @param {string} str Text to convert\n * @param {boolean} p Indicates whether the text will be converted to pascalCase (true) or camelCase (false)\n * @returns {string} Converted text\n */\nfunction camel_pascal(str: string, p: boolean): string {\n  str = capitalizedWords(str).replace(/\\s/g, \"\");\n  if (!p) str = str.charAt(0).toLocaleLowerCase() + str.slice(1);\n  return str;\n}\n\n/**\n * Returns the not accepted fields\n * @param {boolean} acceptHidden Whether or not to accept hidden fields\n * @param {boolean} acceptIgnored Whether or not to accept ignored fields\n * @returns {string} List of non accepted fields selector\n */\nfunction notAccept(\n  acceptHidden: boolean,\n  acceptIgnored: boolean\n): string {\n  const hidden = ',[type=\"hidden\"]',\n    ignore = ',[ignored=\"true\"]',\n    notAccept = '[type=\"image\"],[type=\"submit\"],[type=\"button\"],[type=\"reset\"]';\n  let not = notAccept;\n  if (acceptHidden) not += hidden;\n  if (acceptIgnored) not += ignore;\n  return not;\n}\n\n/**\n * Trigger the callbacks when a message is showed\n * @param {boolean} isValid Validation state\n * @param {Options} options Validation options\n * @param {ValidationField} field The validated field\n * @param {string} message The validation message\n */\nfunction triggerMessageCallback(\n  isValid: boolean,\n  options: Options,\n  form: HTMLFormElement,\n  field: ValidationField,\n  message: string\n) {\n  if (isValid && options.validMessageCallback) {\n    options.validMessageCallback(form, field, message, options);\n  } else if (!isValid && options.invalidMessageCallback) {\n    options.invalidMessageCallback(form, field, message, options);\n  }\n}\n\n/**\n * Escapes all characters that may have conflicts in a regex\n * @param {string} str String to escape\n * @returns {string} Scaped string\n */\nfunction escapeRegExp(str: string): string {\n  return str.replace(/[.*+?^${}()|\\x5B\\x5D\\x2F\\x5C]/g, \"\\\\$&\");\n}\n\n/**\n * Check the password strength and character conditions\n * @param {string} password Password to check\n * @returns {{\n *   strength: number;\n *   check: string[];\n * }} Password check\n */\nfunction checkPasswordStrength(password: string): {\n  strength: number;\n  check: string[];\n} {\n  let strength: number = 0;\n  const check: string[] = [];\n  if (/[A-Z]/.test(password)) {\n    strength++;\n    check.push(\"UC\");\n  }\n  if (/[a-z]/.test(password)) {\n    strength++;\n    check.push(\"LC\");\n  }\n  if (options.passwordSpecialChars.test(password)) {\n    strength++;\n    check.push(\"SC\");\n  }\n  if (/\\d/.test(password)) {\n    strength++;\n    check.push(\"NC\");\n  }\n  if (password.length < 8) strength--;\n  if (password.length >= 8) check.push(\"L\");\n  if (password.length >= 12) strength++;\n  if (/\\s/.test(password)) strength = 1;\n  return { strength: strength, check: check };\n}\n\n/**\n * Lhun algorithm\n * @param {number[]} digits digits to calculate\n * @returns {number} Calculated digit\n */\nfunction luhn(digits: number[]): number {\n  let sum = 0;\n  digits\n    .slice()\n    .reverse()\n    .forEach((digit, i) => {\n      if (i % 2 == 0) {\n        digit *= 2;\n        if (digit > 9) digit -= 9;\n      }\n      sum += digit;\n    });\n  return sum % 10;\n}\n\n/**\n * Module 11 algorithm\n * @param {number[]} digits digits to calculate\n * @returns {number} Calculated digit\n */\nfunction module11(digits: number[]): number {\n  let sum = 0;\n  let factor = 2;\n  digits\n    .slice()\n    .reverse()\n    .forEach((digit) => {\n      sum += digit * factor;\n      factor++;\n      if (factor > 7) factor = 2;\n    });\n  return sum % 11;\n}\n\n/**\n * Convert the user provided size to bytes\n * @param {string} size Size with string size type\n * @returns {number} Size in bytes\n */\nfunction sizeStringToBytes(size: string): number {\n  size = size.toUpperCase();\n  if (size.endsWith(\"GB\")) {\n    return parseInt(size.slice(0, -2), 10) * 1024 * 1024 * 1024;\n  } else if (size.endsWith(\"MB\")) {\n    return parseInt(size.slice(0, -2), 10) * 1024 * 1024;\n  } else if (size.endsWith(\"KB\")) {\n    return parseInt(size.slice(0, -2), 10) * 1024;\n  } else if (size.endsWith(\"B\")) {\n    return parseInt(size.slice(0, -1), 10);\n  } else {\n    return parseInt(size, 10);\n  }\n}\n\n/**\n * Returns the image dimensions\n * @param {File} file Image file\n * @returns {Promise<number[]>} Number array Promise of the dimensions (width, height)\n */\nfunction getImageDimensions(file: File): Promise<number[]> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function (e) {\n      if (e.target) {\n        const image = new Image();\n        image.src = e.target.result as string;\n        image.onload = function () {\n          resolve([image.width, image.height]);\n        };\n      } else resolve([0, 0]);\n    };\n  });\n}\n//#endregion utils\n\n//#region dom\n/**\n * Restricts the number of characters in a TextArea and displays the information\n * @param {HTMLTextAreaElement} TextArea TextArea to limit\n * @param {number} max Max number of character to write\n * @param {string} info Type of information showed\n */\nfunction textAreaLengthRestriction(\n  TextArea: HTMLTextAreaElement,\n  max: number,\n  info: string\n): void {\n  if (TextArea.hasAttribute(\"data-fv-length_restriction\")) return;\n  const container = document.createElement(\"div\");\n  container.classList.add(\"fv-textAreaLength\");\n  let remaining: number;\n  const characterCount = function () {\n    let count = TextArea.value.length;\n    if (count >= max) {\n      count = max;\n      TextArea.value = TextArea.value.substring(0, max);\n    }\n    remaining = max - count;\n    if (remaining < 0) remaining = 0;\n    if (info)\n      switch (info) {\n        case \"both\":\n          container.innerText = `${count}(${remaining})/${max}`;\n          break;\n        case \"remaining\":\n          container.innerText = `${remaining}/${max}`;\n          break;\n        case \"count\":\n        default:\n          container.innerText = `${count}/${max}`;\n          break;\n      }\n    position();\n  };\n  container.style.backgroundColor = window.getComputedStyle(\n    document.getElementsByTagName(\"body\")[0]\n  ).backgroundColor;\n  const position = function () {\n    let left =\n      TextArea.getBoundingClientRect().width -\n      container.getBoundingClientRect().width -\n      20;\n    left = left < 8 ? 8 : left;\n    container.style.marginLeft = `${left}px`;\n    container.style.marginTop = `-${\n      container.getBoundingClientRect().height / 2\n    }px`;\n  };\n  TextArea.before(container);\n  TextArea.setAttribute(\"data-fv-length_restriction\", \"\");\n  TextArea.addEventListener(\"input\", characterCount);\n  TextArea.dispatchEvent(new Event(\"input\"));\n  new ResizeObserver(position).observe(TextArea);\n}\n\n/**\n * Set the input suggestions\n * @param {HTMLInputElement} input Input element where suggestions will be shown\n * @param {string[]} words List of words to suggest\n * @param {Suggestion} settings Custom options for suggestion's DataList Element\n */\nfunction inputSuggestion(\n  input: HTMLInputElement,\n  words: string[],\n  settings: Suggestion\n): void {\n  if (input.hasAttribute(\"data-fv-suggestions\")) return;\n  if (words.filter((w) => w.length > 0).length == 0) return;\n  let currentFocus = -1;\n  const datalist = document.createElement(\"datalist\");\n  datalist.classList.add(\"fv-suggestions\");\n  datalist.classList.add(settings.containerClass);\n  datalist.style.maxHeight = settings.maxHeight;\n  datalist.style.display = \"none\";\n  datalist.setAttribute(\"target\", `#${input.id}`);\n  datalist.style.backgroundColor = window.getComputedStyle(\n    document.getElementsByTagName(\"body\")[0]\n  ).backgroundColor;\n  input.setAttribute(\"autocomplete\", \"off\");\n  input.setAttribute(\"list\", \"\");\n  const fillDatalist = function (words: string[]) {\n    currentFocus = -1;\n    while (datalist.firstChild) datalist.removeChild(datalist.firstChild);\n    for (const word of words) {\n      const option = document.createElement(\"option\");\n      option.value = word;\n      option.innerText = word;\n      option.classList.add(settings.optionClass);\n      option.onclick = function () {\n        datalist.style.display = \"none\";\n        input.value = option.value;\n      };\n      datalist.appendChild(option);\n    }\n    if (datalist.options.length > 0) {\n      datalist.style.display = \"block\";\n      datalist.scrollTo(0, 0);\n    } else {\n      datalist.style.display = \"none\";\n    }\n  };\n  input.addEventListener(\"blur\", function () {\n    const no = document.querySelector<HTMLDataListElement>(\n      `datalist.fv-suggestions[target=\"#${input.id}\"] option:hover`\n    );\n    if (no) return;\n    datalist.style.display = \"none\";\n  });\n  input.addEventListener(\"dblclick\", function () {\n    fillDatalist(words);\n  });\n  input.addEventListener(\"input\", function () {\n    datalist.style.display = \"none\";\n    if (input.value.trim().length == 0) return;\n    setTimeout(() => {\n      const regexp = new RegExp(escapeRegExp(input.value), \"i\");\n      const match = words.filter((word) => regexp.test(word));\n      if (match.length > 0) fillDatalist(match);\n    }, 200);\n  });\n  input.addEventListener(\"keydown\", function (e) {\n    if (datalist.style.display == \"block\" && datalist.options) {\n      if (e.key == \"Escape\") {\n        e.preventDefault();\n        datalist.style.display = \"none\";\n      }\n      if (e.key == \"ArrowUp\") {\n        e.preventDefault();\n        currentFocus--;\n        simulateScroll();\n      }\n      if (e.key == \"ArrowDown\") {\n        e.preventDefault();\n        currentFocus++;\n        simulateScroll();\n      }\n      addActive();\n      if (e.key == \"Enter\") {\n        e.preventDefault();\n        datalist.options[currentFocus].click();\n      }\n    }\n  });\n  const addActive = function () {\n    const selected = document.querySelector<HTMLDataListElement>(\n      \"datalist.fv-suggestions option.active\"\n    );\n    if (selected) selected.classList.remove(\"active\");\n    if (currentFocus >= datalist.options.length) currentFocus = 0;\n    if (currentFocus < 0) currentFocus = datalist.options.length - 1;\n    datalist.options[currentFocus].classList.add(\"active\");\n    return true;\n  };\n  const simulateScroll = function () {\n    currentFocus = currentFocus <= -1 ? 0 : currentFocus;\n    currentFocus =\n      currentFocus > datalist.options.length - 1\n        ? datalist.options.length - 1\n        : currentFocus;\n    const c = Math.floor(\n      parseInt(datalist.style.maxHeight, 10) / datalist.options[0].offsetHeight\n    );\n    datalist.scrollTo(\n      0,\n      datalist.options[0].offsetHeight * (currentFocus - c + 1)\n    );\n  };\n  input.after(datalist);\n  input.setAttribute(\"data-fv-suggestions\", \"\");\n  new ResizeObserver(() => {\n    datalist.style.width = `${input.getBoundingClientRect().width}px`;\n  }).observe(input);\n}\n\n/**\n * Show password strength info\n * @param {HTMLInputElement} input Input type password\n * @param {Options} options Validation options\n */\nfunction passwordInfo(input: HTMLInputElement, options: Options): void {\n  if (input.hasAttribute(\"data-fv-password_info\")) return;\n  if (input.type != \"password\") return;\n  const container = document.createElement(\"div\");\n  const additionalClass = options.passwordInfoClass ?? \"\";\n  container.classList.add(\"fv-password\", additionalClass);\n  container.style.display = \"none\";\n  container.setAttribute(\"target\", `#${input.id}`);\n  const content = `<div class=\"tittle\">${language.passwordConditionsTitle}</div>\n<div class=\"condition UC\">${language.passwordConditionUppercase}</div>\n<div class=\"condition LC\">${language.passwordConditionLowercase}</div>\n<div class=\"condition SC\">${language.passwordConditionSpecialChars}</div>\n<div class=\"condition NC\">${language.passwordConditionNumericChars}</div>\n<div class=\"condition L\">${language.passwordConditionLength}</div>\n<div class=\"strength-text\"></div>\n<div class=\"strength-bar\"></div>`;\n  container.innerHTML = content;\n  input.after(container);\n  input.setAttribute(\"data-fv-password_info\", \"\");\n  const strengthBar = document.querySelector<HTMLDivElement>(\n      `div.fv-password[target=\"#${input.id}\"] div.strength-bar`\n    ) as HTMLDivElement,\n    strength = document.querySelector<HTMLDivElement>(\n      `div.fv-password[target=\"#${input.id}\"] div.strength-text`\n    ) as HTMLDivElement;\n  input.addEventListener(\"blur\", function () {\n    container.style.display = \"none\";\n  });\n  input.addEventListener(\"input\", function () {\n    container.style.display = \"block\";\n    strengthBar.classList.remove(\n      \"very-strong\",\n      \"strong\",\n      \"normal\",\n      \"weak\",\n      \"very-weak\"\n    );\n    strength.innerHTML = \"\";\n    document\n      .querySelectorAll<HTMLDivElement>(\n        `div.fv-password[target=\"#${input.id}\"] div.condition`\n      )\n      .forEach((condition) => {\n        condition.classList.remove(\"check\", \"no-check\");\n      });\n    if (input.value.length == 0) return;\n    const p = checkPasswordStrength(input.value);\n    const checkList: string[] = p.check;\n    const strengthLevel: number = p.strength;\n    [\"UC\", \"LC\", \"SC\", \"NC\", \"L\"].forEach((c) => {\n      document\n        .querySelector<HTMLDivElement>(\n          `div.fv-password[target=\"#${input.id}\"] div.condition.${c}`\n        )\n        ?.classList.add(checkList.includes(c) ? \"check\" : \"no-check\");\n    });\n    switch (strengthLevel) {\n      case 5:\n        strength.innerHTML = language.passwordStrengthVeryStrong;\n        strengthBar.classList.add(\"very-strong\");\n        break;\n      case 4:\n        strength.innerHTML = language.passwordStrengthStrong;\n        strengthBar.classList.add(\"strong\");\n        break;\n      case 3:\n        strength.innerHTML = language.passwordStrengthNormal;\n        strengthBar.classList.add(\"normal\");\n        break;\n      case 2:\n        strength.innerHTML = language.passwordStrengthWeak;\n        strengthBar.classList.add(\"weak\");\n        break;\n      case 1:\n      default:\n        strength.innerHTML = language.passwordStrengthVeryWeak;\n        strengthBar.classList.add(\"very-weak\");\n        break;\n    }\n    input.setAttribute(\"data-fv-password_strength\", strengthLevel.toString());\n    const left =\n      (parseFloat(window.getComputedStyle(input).width) -\n        parseFloat(window.getComputedStyle(container).width)) /\n      2;\n    container.style.marginLeft = `${left}px`;\n  });\n}\n\n/**\n * Set the field help message\n * @param {ValidationField} field The field to attach the message\n * @param {string} message The message to show\n */\nfunction fieldHelpMessage(\n  field: ValidationField,\n  message: string\n): void {\n  const span = document.createElement(\"span\"),\n    name = field.getAttribute(\"name\");\n  if (!name) return;\n  span.classList.add(\"fv-help_message\");\n  span.setAttribute(\"for\", name);\n  span.textContent = message;\n  span.style.display = \"none\";\n  if (field.hasAttribute(\"data-fv-suggestions\")) {\n    const dt = document.querySelector<HTMLDataListElement>(\n      `datalist.fv-suggestions[target=\"#${field.id}\"]`\n    ) as HTMLDataListElement;\n    dt.after(span);\n  } else if (field.hasAttribute(\"data-fv-password_info\")) {\n    const pi = document.querySelector<HTMLDivElement>(\n      `div.fv-password[target=\"#${field.id}`\n    ) as HTMLDivElement;\n    pi.after(span);\n  } else field.after(span);\n}\n\n/**\n * Get the parent of the field\n * @param {ValidationField} field The field element\n * @param {Options} options Validation options\n * @param {HTMLFormElement} form The validated field parent form\n * @returns {HTMLElement | null} Parent element or null if the parent is the form\n */\nfunction getFieldParent(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options\n): HTMLElement | null {\n  let parent: HTMLElement | null = null;\n  const p = form.querySelector<HTMLElement>(options.parentField.trim());\n  if (p) parent = p ?? field.parentElement;\n  if (parent?.nodeName == \"FORM\") parent = null;\n  return parent;\n}\n\n/**\n * Get the invalid message for the validator\n * @param {ValidationField} field The validated field\n * @param {Validator} validator The validator\n * @param {Options} options Validation options\n * @param {Lang} language Form Validator language\n * @returns {string} Invalid message\n */\nfunction getInvalidMessage(\n  field: ValidationField,\n  validator: Validator | AsyncValidator,\n  options: Options,\n  language: Lang\n): string {\n  let message = field.getAttribute(\n    `${options.fieldInvalidMessageAttribute}-${\n      validator.messageKey ?? validator.name\n    }`\n  );\n  if (!message) {\n    message = field.getAttribute(options.fieldInvalidMessageAttribute);\n    if (!message) message = validator.invalidMessage;\n  }\n  return message;\n}\n\n/**\n * Get the valid message for the validator\n * @param {ValidationField} field The validated field\n * @param {Validator} validator The validator\n * @param {Options} options Validation options\n * @returns {string} Valid message\n */\nfunction getValidMessage(\n  field: ValidationField,\n  validator: Validator | AsyncValidator,\n  options: Options\n): string {\n  let message = field.getAttribute(\n    `${options.fieldValidMessageAttribute}-${\n      validator.messageKey ?? validator.name\n    }`\n  );\n  if (!message) {\n    message = field.getAttribute(options.fieldValidMessageAttribute);\n    if (!message) message = validator.validMessage ?? \"\";\n  }\n  return message;\n}\n\n/**\n * Sets the styles for the field and their parent\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n * @param {Options} options Validation options\n * @param {boolean} valid_invalid True if is valid, false if is invalid\n */\nfunction setStyles(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options,\n  valid_invalid: boolean\n): void {\n  let fieldClass: string,\n    fieldRemove: string,\n    parentClass: string,\n    parentRemove: string,\n    labelClass: string,\n    labelRemove: string;\n  if (valid_invalid) {\n    fieldClass = options.validClass;\n    fieldRemove = options.invalidClass;\n    parentClass = \"Valid\";\n    parentRemove = \"Invalid\";\n    labelClass = options.validLabelClass;\n    labelRemove = options.invalidLabelClass;\n  } else {\n    fieldClass = options.invalidClass;\n    fieldRemove = options.validClass;\n    parentClass = \"Invalid\";\n    parentRemove = \"Valid\";\n    labelClass = options.invalidLabelClass;\n    labelRemove = options.validLabelClass;\n  }\n  document\n    .querySelectorAll<ValidationField>(`[name=${field.name}]`)\n    .forEach((f) => {\n      f.classList.remove(fieldRemove);\n      f.classList.add(fieldClass);\n      const parent = getFieldParent(f, form, options);\n      if (parent) {\n        parent.classList.remove(parentRemove);\n        parent.classList.add(parentClass);\n      }\n      const name = [\"checkbox\", \"radio\"].includes(field.type)\n        ? field.id\n        : field.name;\n      const label = document.querySelector(`label[for=${name}]`);\n      if (label) {\n        label.classList.remove(labelRemove);\n        label.classList.add(labelClass);\n      }\n    });\n}\n\n/**\n * Removes the field style and its parent\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n * @param {Options} options Validation options\n */\nfunction removeStyles(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options\n): void {\n  document\n    .querySelectorAll<ValidationField>(`[name=${field.name}]`)\n    .forEach((f) => {\n      f.classList.remove(options.invalidClass);\n      f.classList.remove(options.validClass);\n      const parent = getFieldParent(f, form, options);\n      if (parent) {\n        parent.classList.remove(\"Valid\");\n        parent.classList.remove(\"Invalid\");\n      }\n      const name = [\"checkbox\", \"radio\"].includes(field.type)\n        ? field.id\n        : field.name;\n      const label = document.querySelector(`label[for=${name}]`);\n      if (label) {\n        label.classList.remove(options.validLabelClass);\n        label.classList.remove(options.invalidLabelClass);\n      }\n    });\n}\n\n/**\n * Sets the field inline validation message\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n * @param {Options} options Validation options\n * @param {Configuration} configuration Validation configuration\n * @param {Lang} language Form Validator language\n * @param {boolean} valid_invalid True if is valid, false if is invalid\n * @param {(Validator | AsyncValidator)} validator The validator\n */\nfunction setInlineMessage(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options,\n  configuration: Configuration,\n  language: Lang,\n  valid_invalid: boolean,\n  validator: Validator | AsyncValidator\n): void {\n  const span = document.createElement(\"span\"),\n    parent = getFieldParent(field, form, options),\n    fieldName =\n      form.querySelector<HTMLLabelElement>(`label[for=\"${field.name}\"]`)\n        ?.textContent ?? field.name;\n  let message: string;\n  span.classList.add(options.inlineMessageClass);\n  span.setAttribute(\"for-field\", field.name);\n  if (valid_invalid) {\n    span.classList.add(options.validMessageClass);\n    message = getValidMessage(field, validator, options);\n    configuration.validMessages[form.id][fieldName] = message;\n  } else {\n    span.classList.add(options.invalidMessageClass);\n    message = getInvalidMessage(field, validator, options, language);\n    configuration.invalidMessages[form.id][fieldName] = message;\n  }\n  if (message.length == 0) return;\n  span.innerText = message;\n  span.style.display = \"block\";\n  if (parent) {\n    parent.insertAdjacentElement(\"beforeend\", span);\n  } else {\n    field.after(span);\n  }\n  triggerMessageCallback(valid_invalid, options, form, field, message);\n}\n\n/**\n * Sets the field top validation message\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n * @param {Options} options Validation options\n * @param {Configuration} configuration Validation configuration\n * @param {Lang} language Form Validator language\n * @param {boolean} valid_invalid True if is valid, false if is invalid\n * @param {(Validator | AsyncValidator)} validator The validator\n */\nfunction setTopMessage(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options,\n  configuration: Configuration,\n  language: Lang,\n  valid_invalid: boolean,\n  validator: Validator | AsyncValidator\n): void {\n  let message: string;\n  const fieldName =\n    form.querySelector<HTMLLabelElement>(`label[for=\"${field.name}\"]`)\n      ?.textContent ?? field.name;\n  const validView = options.topMessagesTemplate\n      .replace(\"{topMessagesClass}\", options.topMessagesClass)\n      .replace(\"{formID}\", form.id)\n      .replace(\"{title}\", language.validTitle)\n      .replace(\"{valid_invalid}\", options.validMessagesClass)\n      .replace(\"{vi}\", \"valid\"),\n    invalidView = options.topMessagesTemplate\n      .replace(\"{topMessagesClass}\", options.topMessagesClass)\n      .replace(\"{formID}\", form.id)\n      .replace(\"{title}\", language.invalidTitle)\n      .replace(\"{valid_invalid}\", options.invalidMessagesClass)\n      .replace(\"{vi}\", \"invalid\");\n  if (valid_invalid) {\n    message = getValidMessage(field, validator, options);\n    configuration.validMessages[form.id][fieldName] = message;\n  } else {\n    message = getInvalidMessage(field, validator, options, language);\n    configuration.invalidMessages[form.id][fieldName] = message;\n  }\n  let validMessages = \"\",\n    invalidMessages = \"\";\n  for (const key in configuration.validMessages[form.id]) {\n    if (configuration.validMessages[form.id][key].trim().length > 0)\n      validMessages += `<li for=\"${key}\"><strong>${key}</strong> ${\n        configuration.validMessages[form.id][key]\n      }</li>`;\n  }\n  for (const key in configuration.invalidMessages[form.id]) {\n    if (configuration.invalidMessages[form.id][key].length > 0)\n      invalidMessages += `<li for=\"${key}\"><strong>${key}</strong> ${\n        configuration.invalidMessages[form.id][key]\n      }</li>`;\n  }\n  if (!valid_invalid && invalidMessages.length > 0)\n    form.insertAdjacentHTML(\n      \"afterbegin\",\n      invalidView.replace(\"{fields&messagesList}\", invalidMessages)\n    );\n  else if (valid_invalid && validMessages.length > 0)\n    form.insertAdjacentHTML(\n      \"afterbegin\",\n      validView.replace(\"{fields&messagesList}\", validMessages)\n    );\n  triggerMessageCallback(valid_invalid, options, form, field, message);\n}\n\n/**\n * Removes the field message\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n */\nfunction removeInlineMessages(\n  field: ValidationField,\n  form: HTMLFormElement\n): void {\n  const span = form.querySelector<HTMLSpanElement>(\n    `span[for-field=\"${field.name}\"]`\n  );\n  if (span) span.remove();\n}\n\n/**\n * Remove all the top messages\n * @param {HTMLFormElement} form The validated fields parent form\n * @param {Configuration} configuration Validation configuration\n */\nfunction removeTopMessage(\n  form: HTMLFormElement,\n  configuration: Configuration\n): void {\n  configuration.validMessages[form.id] = {};\n  configuration.invalidMessages[form.id] = {};\n  form\n    .querySelectorAll<HTMLDivElement>(\n      \"div[data-fv-top-valid],div[data-fv-top-invalid]\"\n    )\n    .forEach((div) => div.remove());\n}\n\n/**\n * Sync the top messages with the inline messages\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n * @param {Configuration} configuration Validation configuration\n * @param {boolean} valid_invalid True if is valid, false if is invalid\n */\nfunction syncTopMessages(\n  field: ValidationField,\n  form: HTMLFormElement,\n  configuration: Configuration,\n  valid_invalid: boolean\n): void {\n  const fieldName =\n    form.querySelector<HTMLLabelElement>(`label[for=\"${field.name}\"]`)\n      ?.textContent ?? field.name;\n  if (!valid_invalid && configuration.validMessages[form.id][fieldName]) {\n    delete configuration.validMessages[form.id][fieldName];\n    form\n      .querySelector<HTMLLIElement>(\n        `div[data-fv-top-valid] li[for=\"${fieldName}\"]`\n      )\n      ?.remove();\n  } else if (\n    valid_invalid &&\n    configuration.invalidMessages[form.id][fieldName]\n  ) {\n    delete configuration.invalidMessages[form.id][fieldName];\n    form\n      .querySelector<HTMLLIElement>(\n        `div[data-fv-top-invalid] li[for=\"${fieldName}\"]`\n      )\n      ?.remove();\n  }\n  if (\n    form.querySelectorAll<HTMLLIElement>(`div[data-fv-top-valid] li`).length ==\n    0\n  )\n    form.querySelector<HTMLDivElement>(`div[data-fv-top-valid]`)?.remove();\n  if (\n    form.querySelectorAll<HTMLLIElement>(`div[data-fv-top-invalid] li`)\n      .length == 0\n  )\n    form.querySelector<HTMLDivElement>(`div[data-fv-top-invalid]`)?.remove();\n}\n\n/**\n * Sets the field validation message\n * @param {ValidationField} field The validated field\n * @param {HTMLFormElement} form The validated field parent form\n * @param {Options} options Validation options\n * @param {Configuration} configuration Validation configuration\n * @param {Lang} language Form Validator language\n * @param {boolean} valid_invalid True if is valid, false if is invalid\n * @param {(Validator | AsyncValidator)} validator The validator\n */\nfunction setMessage(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options,\n  configuration: Configuration,\n  language: Lang,\n  valid_invalid: boolean,\n  validator: Validator | AsyncValidator\n): void {\n  const isHidden =\n    field.type == \"hidden\" || window.getComputedStyle(field).display == \"none\";\n  syncTopMessages(field, form, configuration, valid_invalid);\n  removeInlineMessages(field, form);\n  if (valid_invalid && options.validMessagesPosition == \"top\") {\n    form.querySelector<HTMLDivElement>(`div[data-fv-top-valid]`)?.remove();\n    setTopMessage(\n      field,\n      form,\n      options,\n      configuration,\n      language,\n      valid_invalid,\n      validator\n    );\n  } else if (\n    valid_invalid &&\n    options.validMessagesPosition == \"inline\" &&\n    !isHidden\n  ) {\n    setInlineMessage(\n      field,\n      form,\n      options,\n      configuration,\n      language,\n      valid_invalid,\n      validator\n    );\n  }\n  if (!valid_invalid && options.invalidMessagesPosition == \"top\") {\n    form.querySelector<HTMLDivElement>(`div[data-fv-top-invalid]`)?.remove();\n    setTopMessage(\n      field,\n      form,\n      options,\n      configuration,\n      language,\n      valid_invalid,\n      validator\n    );\n  } else if (\n    !valid_invalid &&\n    options.invalidMessagesPosition == \"inline\" &&\n    !isHidden\n  ) {\n    setInlineMessage(\n      field,\n      form,\n      options,\n      configuration,\n      language,\n      valid_invalid,\n      validator\n    );\n  }\n}\n\n/**\n * Remove all styles and messages\n * @param {HTMLFormElement} form The validated fields parent form\n * @param {Options} options Validation options\n * @param {Configuration} configuration Validation configuration\n */\nfunction formReset(\n  form: HTMLFormElement,\n  options: Options,\n  configuration: Configuration\n): void {\n  const fields = form.querySelectorAll<ValidationField>(\n    'textarea, select, input:not([type=\"submit\"],[type=\"button\"],[type=\"reset\"])'\n  );\n  fields.forEach((field) => {\n    removeStyles(field, form, options);\n    removeInlineMessages(field, form);\n  });\n  removeTopMessage(form, configuration);\n}\n\n/**\n * Toggles the visibility of the help messages\n * @param {ValidationField} field Field owner of the help message\n * @param {HTMLFormElement} form Form to search fields\n * @param {Options} options Validation options\n * @param {Boolean} show Show or hide de message\n */\nfunction toggleHelpMessage(\n  field: ValidationField,\n  form: HTMLFormElement,\n  options: Options,\n  show: boolean\n): void {\n  if (options.showHelpMessagesOnFocus) {\n    const name = field.name ?? \"\",\n      span = form.querySelector<HTMLSpanElement>(\n        `span.fv-help_message[for=\"${name}\"]`\n      );\n    if (span) {\n      span.style.display = show ? \"block\" : \"none\";\n    }\n  }\n}\n\n/**\n * Adds the valid class in all no validated fields\n * @param {HTMLFormElement} form Form to search fields\n * @param {Options} options Validation options\n */\nfunction addValidStyleInAllFields(\n  form: HTMLFormElement,\n  options: Options\n): void {\n  if (!options.addValidClassOnAll) return;\n  const fields = form.querySelectorAll<ValidationField>(\n    `textarea:not(.${options.validClass}, .${options.invalidClass}), input:not(.${options.validClass}, .${options.invalidClass}), select:not(.${options.validClass}, .${options.invalidClass})`\n  );\n  fields.forEach((field) => setStyles(field, form, options, true));\n}\n//#endregion dom\n\n//#region FormValidator\n/**\n * FormValidator class definition\n * @class FormValidate\n */\nclass FormValidate {\n  private conf: Configuration;\n  private opt: Options;\n  private lang: Lang;\n  constructor(opt?: Options, lang?: Lang) {\n    this.conf = configuration;\n    this.conf.language = { ...language, ...lang };\n    this.opt = { ...options, ...opt };\n    this.lang = this.conf.language;\n  }\n\n  /**\n   * Triggers the FormValidator events of the fields\n   * @param {string} event Event name\n   * @param {HTMLFormElement} form  Parent form\n   * @param {ValidationField} field Validating field\n   * @param {boolean} state Validation result (false in event beforeValidation or afterValidation)\n   * @param {Options} options Validation options\n   */\n  private triggerEvent(\n    event: string,\n    form: HTMLFormElement,\n    field: ValidationField,\n    state: boolean,\n    options: Options\n  ): void {\n    let fns: ValidatorEvent[] = [];\n    switch (event) {\n      case \"beforeValidate\":\n        fns = configuration.onBeforeValidate[field.name];\n        break;\n      case \"valid\":\n        fns = configuration.onValid[field.name];\n        break;\n      case \"invalid\":\n        fns = configuration.onInvalid[field.name];\n        break;\n      case \"afterValidate\":\n        fns = configuration.onAfterValidate[field.name];\n        break;\n    }\n    if (fns)\n      fns.forEach((fn) => {\n        fn(form, field, state, options);\n      });\n  }\n\n  /**\n   * Triggers all validators set in the fields\n   * @param {ValidationField} field Field to validate\n   * @param {HTMLFormElement} form Parent form\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   * @param {string} event Event to check if must be triggered\n   * @returns {boolean} Returns true only if pass all validations\n   */\n  private validateField(\n    field: ValidationField,\n    form: HTMLFormElement,\n    options: Options,\n    config: Configuration,\n    event: string\n  ): boolean {\n    this.triggerEvent(\"beforeValidate\", form, field, false, options);\n    const list = this.searchSyncValidators(field, options, config),\n      value = field.value,\n      valid_invalid: boolean[] = [];\n    for (const validator of list) {\n      if (config.validators[validator]) {\n        if (\n          event == \"input\" &&\n          !(\n            config.validators[validator].validateOnInput ??\n            options.validateOnInput\n          )\n        )\n          continue;\n        const r = config.validators[validator].validatorFunction(\n          value,\n          form,\n          field,\n          options,\n          this.lang\n        );\n        if (r) this.triggerEvent(\"valid\", form, field, true, options);\n        else this.triggerEvent(\"invalid\", form, field, false, options);\n        valid_invalid.push(r);\n        removeStyles(field, form, options);\n        setStyles(field, form, options, r);\n        setMessage(\n          field,\n          form,\n          options,\n          config,\n          this.lang,\n          r,\n          config.validators[validator]\n        );\n      } else {\n        console.error(\n          `FormValidator: Failed to trigger the validator: ${validator}, can not be found.`\n        );\n      }\n      if (valid_invalid.includes(false)) break;\n    }\n    this.triggerEvent(\n      \"afterValidate\",\n      form,\n      field,\n      !valid_invalid.includes(false),\n      options\n    );\n    return !valid_invalid.includes(false);\n  }\n\n  /**\n   * Triggers all async validators set in the fields\n   * @param {ValidationField} field Field to validate\n   * @param {HTMLFormElement} form Parent form\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   * @param {string} event Event to check if must be triggered\n   * @returns {Promise<boolean>} Returns a true promise only if pass all validations\n   */\n  private async validateFieldAsync(\n    field: ValidationField,\n    form: HTMLFormElement,\n    options: Options,\n    config: Configuration,\n    event: string\n  ): Promise<boolean> {\n    this.triggerEvent(\"beforeValidate\", form, field, false, options);\n    const list = this.searchAsyncValidators(field, options, config),\n      value = field.value;\n    const valid_invalid: boolean[] = [];\n    for (const validator of list) {\n      if (config.asyncValidators[validator]) {\n        if (\n          event == \"input\" &&\n          !(\n            config.asyncValidators[validator].validateOnInput ??\n            options.validateOnInput\n          )\n        )\n          continue;\n        const r = await config.asyncValidators[validator].validatorFunction(\n          value,\n          form,\n          field,\n          options,\n          this.lang\n        );\n        if (r) this.triggerEvent(\"valid\", form, field, true, options);\n        else this.triggerEvent(\"invalid\", form, field, false, options);\n        valid_invalid.push(r);\n        removeStyles(field, form, options);\n        setStyles(field, form, options, r);\n        setMessage(\n          field,\n          form,\n          options,\n          config,\n          this.lang,\n          r,\n          config.asyncValidators[validator]\n        );\n      } else {\n        console.error(\n          `FormValidator: Failed to trigger the validator: ${validator}, can not be found.`\n        );\n      }\n      if (valid_invalid.includes(false)) break;\n    }\n    this.triggerEvent(\n      \"afterValidate\",\n      form,\n      field,\n      !valid_invalid.includes(false),\n      options\n    );\n    return !valid_invalid.includes(false);\n  }\n\n  /**\n   * Triggers all validators set in the fields\n   * @param {HTMLFormElement} form Parent form\n   * @param {string} not List of inputs attributes not to be validated\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   * @param {string} event Event to check if must be triggered\n   * @returns {boolean} Returns true only if pass all validations\n   */\n  private validateAllFields(\n    form: HTMLFormElement,\n    not: string,\n    options: Options,\n    config: Configuration,\n    event: string\n  ): boolean {\n    const fields = form.querySelectorAll<ValidationField>(\n        `textarea, select, input:not(${not})`\n      ),\n      valid: boolean[] = [];\n    fields.forEach((field) => {\n      if (this.validateFieldController(field, \"submit\", options))\n        valid.push(this.validateField(field, form, options, config, event));\n    });\n    if (valid.length == 0) valid.push(true);\n    return !valid.includes(false);\n  }\n\n  /**\n   * Triggers all async validators set in the fields\n   * @param {HTMLFormElement} form Parent form\n   * @param {string} not List of inputs attributes not to be validated\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   * @param {string} event Event to check if must be triggered\n   * @returns {Promise<boolean>} Returns a true promise only if pass all validations\n   */\n  private async validateAllFieldsAsync(\n    form: HTMLFormElement,\n    not: string,\n    options: Options,\n    config: Configuration,\n    event: string\n  ): Promise<boolean> {\n    const fields = form.querySelectorAll<ValidationField>(\n        `textarea, select, input:not(${not})`\n      ),\n      valid: boolean[] = [];\n    for (const element of Array.from(fields)) {\n      const field = element;\n      if (this.validateFieldController(field, \"submit\", options))\n        valid.push(\n          await this.validateFieldAsync(field, form, options, config, event)\n        );\n    }\n    if (valid.length == 0) valid.push(true);\n    return !valid.includes(false);\n  }\n\n  /**\n   * Triggers all modifiers set in the fields\n   * @param {(HTMLInputElement | HTMLTextAreaElement)} field Field to modify the value\n   * @param {HTMLFormElement} form Form to search fields\n   * @param {string} event Event type name\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   */\n  private modifyField(\n    field: HTMLInputElement | HTMLTextAreaElement,\n    form: HTMLFormElement,\n    event: string,\n    options: Options,\n    config: Configuration\n  ): void {\n    const modifiersList = field.getAttribute(options.fieldModifyAttribute),\n      isForModifier =\n        (field instanceof HTMLInputElement &&\n          ![\"search\", \"checkbox\", \"radio\", \"file\"].includes(field.type)) ||\n        field instanceof HTMLTextAreaElement;\n    if (!isForModifier) return;\n    const list = !modifiersList ? [] : modifiersList.split(/[,|-]+\\s*|\\s+/);\n    let value = field.value;\n    for (const modifier of list) {\n      if (config.modifiers[modifier]) {\n        if (\n          event == \"input\" &&\n          !(config.modifiers[modifier].modifyOnInput ?? options.modifyOnInput)\n        )\n          continue;\n        value = config.modifiers[modifier].modifierFunction(\n          value,\n          form,\n          field,\n          options,\n          this.lang\n        );\n      } else {\n        console.error(\n          `FormValidator: Failed to trigger the modifier: ${modifier}, can not be found.`\n        );\n      }\n    }\n    field.value = value;\n  }\n\n  /**\n   * Set the dependant validation\n   * @param {HTMLFormElement} form Form to search target field\n   * @param {ValidationField} field Field to check if it must be dependant\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   */\n  private setDependantValidation(\n    form: HTMLFormElement,\n    field: ValidationField,\n    options: Options,\n    config: Configuration\n  ): void {\n    const depending = field.getAttribute(\"data-fv-depends-on\");\n    if (!depending) return;\n    const target = form.querySelector<ValidationField>(`[name=${depending}]`);\n    if (target) {\n      field.setAttribute(\"data-fv-skip\", \"true\");\n      const validators =\n        field.getAttribute(options.fieldValidateAttribute) ?? \"\";\n      if (!validators.includes(\"required\"))\n        field.setAttribute(\n          options.fieldValidateAttribute,\n          validators + \"required\"\n        );\n      target.setAttribute(\"data-fv-dependant\", depending);\n      const fEvent = field instanceof HTMLSelectElement ? \"change\" : \"input\";\n      const value = field.getAttribute(\"data-fv-depends-on-value\") ?? \"\";\n      field.addEventListener(fEvent, function () {\n        field.setAttribute(\"data-fv-skip\", \"true\");\n        removeStyles(field, form, options);\n        removeInlineMessages(field, field.form as HTMLFormElement);\n        if (config.validMessages[form.id][field.name])\n          delete config.validMessages[form.id][field.name];\n        if (config.invalidMessages[form.id][field.name])\n          delete config.invalidMessages[form.id][field.name];\n        document\n          .querySelector(`.${options.topMessagesClass} li[for=${field.name}]`)\n          ?.remove();\n        if (target.value.trim().length > 0)\n          field.setAttribute(\"data-fv-skip\", \"false\");\n        if (value.length > 0)\n          if (value != target.value) field.setAttribute(\"data-fv-skip\", \"true\");\n      });\n      const tEvent = field instanceof HTMLSelectElement ? \"change\" : \"input\";\n      const _self = this;\n      target.addEventListener(tEvent, function () {\n        removeStyles(field, form, options);\n        removeInlineMessages(field, field.form as HTMLFormElement);\n        if (config.validMessages[form.id][field.name])\n          delete config.validMessages[form.id][field.name];\n        if (config.invalidMessages[form.id][field.name])\n          delete config.invalidMessages[form.id][field.name];\n        document\n          .querySelector(`.${options.topMessagesClass} li[for=${field.name}]`)\n          ?.remove();\n        if (\n          field.classList.contains(options.validClass) ||\n          field.classList.contains(options.invalidClass)\n        )\n          _self.validateField(field, form, options, config, tEvent);\n      });\n    } else {\n      console.error(\n        `FormValidator: Failed to set the dependant validation on ${field.name}, the target field ${depending} can not be found.`\n      );\n    }\n  }\n\n  /**\n   * Set the optional validation\n   * @param {HTMLFormElement} form Form to search target field\n   * @param {ValidationField} field Field to check if it must be optional\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   */\n  private setOptionalValidation(\n    form: HTMLFormElement,\n    field: ValidationField,\n    options: Options,\n    config: Configuration\n  ): void {\n    if (field.hasAttribute(\"data-fv-depends-on\")) return;\n    const optional = field.getAttribute(\"data-fv-optional\") ?? \"\";\n    if (optional == \"true\") {\n      field.setAttribute(\"data-fv-skip\", \"true\");\n      const validators =\n        field.getAttribute(options.fieldValidateAttribute) ?? \"\";\n      if (!validators.includes(\"required\"))\n        field.setAttribute(\n          options.fieldValidateAttribute,\n          validators + \"required\"\n        );\n      const event = field instanceof HTMLSelectElement ? \"change\" : \"input\";\n      field.addEventListener(event, function () {\n        if (field.value.trim().length > 0)\n          field.setAttribute(\"data-fv-skip\", \"false\");\n        else {\n          field.setAttribute(\"data-fv-skip\", \"true\");\n          removeStyles(field, form, options);\n          removeInlineMessages(field, field.form as HTMLFormElement);\n          if (config.validMessages[form.id][field.name])\n            delete config.validMessages[form.id][field.name];\n          if (config.invalidMessages[form.id][field.name])\n            delete config.invalidMessages[form.id][field.name];\n          document\n            .querySelector(`.${options.topMessagesClass} li[for=${field.name}]`)\n            ?.remove();\n        }\n      });\n    }\n  }\n\n  /**\n   * Controls if the field could be validated\n   * @param {ValidationField} field Field to check the type\n   * @param {string} event Event to check if must be triggered\n   * @param {Options} options Validation options\n   * @returns {boolean} True if could be validated\n   */\n  private validateFieldController(\n    field: ValidationField,\n    event: string,\n    options: Options\n  ): boolean {\n    const isIgnored = field.getAttribute(\"data-fv-ignored\") ?? \"false\";\n    const isSkipped = field.getAttribute(\"data-fv-skip\") ?? \"false\";\n    if (isIgnored == \"true\" || isSkipped == \"true\") return false;\n    const isCheckOrRadio =\n      field instanceof HTMLInputElement &&\n      [\"checkbox\", \"radio\"].includes(field.type);\n    let validate = false;\n    switch (event) {\n      case \"click\":\n        if (isCheckOrRadio && options.validateCheckboxRadioOnClick)\n          validate = true;\n        break;\n      case \"blur\":\n        if (options.validateOnBlur) validate = true;\n        break;\n      default:\n        validate = true;\n        break;\n    }\n    return validate;\n  }\n\n  /**\n   * Adds the DOM features to the field\n   * @param {HTMLFormElement} form Parent form\n   * @param {ValidationField} field Target field\n   * @param {Options} options Validation options\n   */\n  private domFieldsFeatures(\n    form: HTMLFormElement,\n    field: ValidationField,\n    options: Options\n  ): void {\n    const fieldsToIgnore = form.querySelectorAll<HTMLInputElement>(\n      notAccept(false, false)\n    );\n    if (\n      field instanceof HTMLInputElement &&\n      Array.from(fieldsToIgnore).includes(field)\n    )\n      return;\n    if (field instanceof HTMLInputElement) {\n      if (options.addSuggestions) {\n        const suggestions =\n          field.getAttribute(options.suggestionAttribute) ?? \"\";\n        inputSuggestion(\n          field,\n          suggestions.split(/[,|-]+\\s*|\\s+/),\n          options.suggestionConfig\n        );\n      }\n      if (options.addPasswordInfo) {\n        passwordInfo(field, options);\n      }\n    }\n    if (field instanceof HTMLTextAreaElement) {\n      const restriction = field.getAttribute(options.lengthRestrictAttribute);\n      if (restriction)\n        textAreaLengthRestriction(\n          field,\n          parseInt(restriction, 10),\n          options.lengthRestrictInfo\n        );\n    }\n    if (options.showHelpMessagesOnFocus) {\n      const message = field.getAttribute(options.fieldHelpMessageAttribute);\n      if (message) {\n        fieldHelpMessage(field, message);\n      }\n    }\n  }\n\n  /**\n   * Adds an ignore attribute to the field if it is in the ignore list\n   * @param {HTMLFormElement} form Parent form\n   * @param {ValidationField} field Target field\n   * @param {Options} options Validation options\n   */\n  private ignoreField(\n    form: HTMLFormElement,\n    field: ValidationField,\n    options: Options\n  ): void {\n    const fieldsToIgnore = form.querySelectorAll<HTMLInputElement>(\n      notAccept(false, false)\n    );\n    if (\n      field instanceof HTMLInputElement &&\n      Array.from(fieldsToIgnore).includes(field)\n    )\n      return;\n    let list: string[] = [];\n    const name = field.getAttribute(\"name\") ?? \"\";\n    if (Array.isArray(options.ignoredFieldsNames)) {\n      list = options.ignoredFieldsNames;\n    } else if (typeof options.ignoredFieldsNames == \"string\") {\n      list = options.ignoredFieldsNames.split(/[,|-]+\\s*|\\s+/);\n    }\n    if (list.indexOf(name) > -1) {\n      field.setAttribute(\"data-fv-ignored\", \"true\");\n    } else {\n      field.setAttribute(\"data-fv-ignored\", \"false\");\n    }\n    field.setAttribute(\"data-fv-skip\", \"false\");\n  }\n\n  /**\n   * Search for async validators in the validator list of the field\n   * @param {ValidationField} field Target field\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   * @returns {string[]} Async validators list\n   */\n  private searchAsyncValidators(\n    field: ValidationField,\n    options: Options,\n    config: Configuration\n  ): string[] {\n    const asyncValidators = Object.keys(config.asyncValidators),\n      validatorsList = field.getAttribute(options.fieldValidateAttribute),\n      list = !validatorsList ? [] : validatorsList.split(/[,|-]+\\s*|\\s+/);\n    return asyncValidators.filter((asyncValidator) =>\n      list.includes(asyncValidator)\n    );\n  }\n\n  /**\n   * Search for sync validators in the validator list of the field\n   * @param {ValidationField} field Target field\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   * @returns {string[]} Sync validators list\n   */\n  private searchSyncValidators(\n    field: ValidationField,\n    options: Options,\n    config: Configuration\n  ): string[] {\n    const syncValidators = Object.keys(config.validators),\n      validatorsList = field.getAttribute(options.fieldValidateAttribute),\n      list = !validatorsList ? [] : validatorsList.split(/[,|-]+\\s*|\\s+/);\n    return syncValidators.filter((syncValidator) =>\n      list.includes(syncValidator)\n    );\n  }\n\n  /**\n   * Adds the event listeners to the field\n   * @param {HTMLFormElement} form Parent form\n   * @param {ValidationField} field Target field\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   */\n  private addEventListenersToFormFields(\n    form: HTMLFormElement,\n    field: ValidationField,\n    options: Options,\n    config: Configuration\n  ): void {\n    const fieldsToIgnore = form.querySelectorAll<HTMLInputElement>(\n      notAccept(options.validateHiddenFields, false)\n    );\n    if (\n      field instanceof HTMLInputElement &&\n      Array.from(fieldsToIgnore).includes(field)\n    )\n      return;\n    field.addEventListener(\"focus\", () => {\n      toggleHelpMessage(field, form, options, true);\n    });\n    field.addEventListener(\"click\", async () => {\n      toggleHelpMessage(field, form, options, true);\n      if (this.validateFieldController(field, \"click\", options)) {\n        if (!this.validateField(field, form, options, config, \"click\")) return;\n        await this.validateFieldAsync(field, form, options, config, \"click\");\n      }\n    });\n    field.addEventListener(\"blur\", async () => {\n      toggleHelpMessage(field, form, options, false);\n      if (\n        field instanceof HTMLInputElement ||\n        field instanceof HTMLTextAreaElement\n      )\n        this.modifyField(field, form, \"blur\", options, config);\n      if (this.validateFieldController(field, \"blur\", options)) {\n        if (!this.validateField(field, form, options, config, \"blur\")) return;\n        await this.validateFieldAsync(field, form, options, config, \"blur\");\n      }\n    });\n    field.addEventListener(\"input\", async () => {\n      if (\n        field instanceof HTMLInputElement ||\n        field instanceof HTMLTextAreaElement\n      )\n        this.modifyField(field, form, \"input\", options, config);\n      if (this.validateFieldController(field, \"input\", options)) {\n        if (!this.validateField(field, form, options, config, \"input\")) return;\n        await this.validateFieldAsync(field, form, options, config, \"input\");\n      }\n    });\n    if (field instanceof HTMLSelectElement)\n      field.addEventListener(\"change\", async () => {\n        if (!this.validateField(field, form, options, config, \"change\")) return;\n        await this.validateFieldAsync(field, form, options, config, \"change\");\n      });\n  }\n\n  /**\n   * Add the event listeners to the form\n   * @param {HTMLFormElement} form Parent form\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   */\n  private addEventListenersToForm(\n    form: HTMLFormElement,\n    options: Options,\n    config: Configuration\n  ): void {\n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      let isValid = this.validateAllFields(\n        form,\n        notAccept(options.validateHiddenFields, false),\n        options,\n        config,\n        \"submit\"\n      );\n      if (isValid)\n        isValid = await this.validateAllFieldsAsync(\n          form,\n          notAccept(options.validateHiddenFields, false),\n          options,\n          config,\n          \"submit\"\n        );\n      form.setAttribute(\"valid-state\", isValid ? \"validForm\" : \"invalidForm\");\n      if (!isValid) {\n        if (options.scrollToTopOnInvalid)\n          form.scrollIntoView({ behavior: \"smooth\" });\n        e.stopImmediatePropagation();\n      }\n      addValidStyleInAllFields(form, options);\n    });\n    form.addEventListener(\"reset\", () => {\n      formReset(form, options, config);\n      form.removeAttribute(\"valid-state\");\n    });\n  }\n\n  /**\n   * Set up modifiers and validators in all fields of all configured forms\n   * @param {Options} options Validation options\n   * @param {Configuration} config Validation configuration\n   */\n  private setUpFV(options: Options, config: Configuration): void {\n    const form = options.form\n      .split(/[,|-]+\\s*|\\s+/)\n      .map((f) => `#${f}`)\n      .join(\",\");\n    let forms = document.querySelectorAll<HTMLFormElement>(form);\n    if (!forms) forms = document.querySelectorAll<HTMLFormElement>(\"form\");\n    forms.forEach((form) => {\n      config.validMessages[form.id] = {};\n      config.invalidMessages[form.id] = {};\n      form.classList.add(\"fv\");\n      form.noValidate = true;\n      this.addEventListenersToForm(form, options, config);\n      const fields = form.querySelectorAll<ValidationField>(\n        \"input, textarea, select\"\n      );\n      fields.forEach((field) => {\n        this.domFieldsFeatures(form, field, options);\n        this.ignoreField(form, field, options);\n        this.setDependantValidation(form, field, options, config);\n        this.setOptionalValidation(form, field, options, config);\n        this.addEventListenersToFormFields(form, field, options, config);\n      });\n    });\n  }\n\n  /**\n   * Set suggestions to the specified input\n   * @param {HTMLInputElement} input Input element or input name\n   * @param {string[]} words Array of words to suggest\n   * @param {?Suggestion} [config] Suggestion list config\n   */\n  public setSuggestions(\n    input: string | HTMLInputElement,\n    words: string[],\n    config?: Suggestion\n  ): void {\n    let i: HTMLInputElement | null = null;\n    if (!(input instanceof HTMLInputElement)) {\n      i = document.querySelector<HTMLInputElement>(`[name=${input}]`);\n      if (i) input = i;\n      else {\n        console.error(\n          `FormValidator: Failed to set the suggestions, the input '${input}' can not be found.`\n        );\n        return;\n      }\n    }\n    if (!config) config = options.suggestionConfig;\n    inputSuggestion(input, words, config);\n  }\n\n  /**\n   * Set the text length restriction to the specified textarea\n   * @param {(string | HTMLTextAreaElement)} TextArea Textarea element or textarea name\n   * @param {number} max Text max length\n   * @param {?string} [info] Type of info to show (count, both, remaining)\n   */\n  public setTextAreaLengthRestriction(\n    TextArea: string | HTMLTextAreaElement,\n    max: number,\n    info?: string\n  ): void {\n    let t: HTMLTextAreaElement | null = null;\n    if (!(TextArea instanceof HTMLTextAreaElement)) {\n      t = document.querySelector<HTMLTextAreaElement>(`[name=${TextArea}]`);\n      if (t) TextArea = t;\n      else {\n        console.error(\n          `FormValidator: Failed to set the text length restriction, the textarea '${TextArea}' can not be found.`\n        );\n        return;\n      }\n    }\n    if (!info) info = \"count\";\n    if (![\"count\", \"both\", \"remaining\"].includes(info)) return;\n    textAreaLengthRestriction(TextArea, max, info);\n  }\n\n  /**\n   * Set the password info to the input type password\n   * @param {(string | HTMLInputElement)} input Input element or input name\n   */\n  public setPasswordInfo(input: string | HTMLInputElement): void {\n    let i: HTMLInputElement | null = null;\n    if (!(input instanceof HTMLInputElement)) {\n      i = document.querySelector<HTMLInputElement>(`[name=${input}]`);\n      if (i) input = i;\n      else {\n        console.error(\n          `FormValidator: Failed to set the password info, the input '${input}' can not be found.`\n        );\n        return;\n      }\n    }\n    passwordInfo(input, options);\n  }\n\n  /**\n   * Validates the specified fields of the specified forms\n   * @param {?string} [form] Form or forms id to validate (comma separated)\n   * @param {?Options} [options] Validation options\n   */\n  public validate(form?: string, options?: Options): void {\n    const opt = { ...this.opt, ...options },\n      conf = this.conf;\n    let f: string;\n    if (!form) {\n      f = opt.form;\n    } else {\n      f = form ?? \"\";\n\n      f = f.trim().length > 0 ? f : opt.form;\n    }\n    opt.form = f;\n    this.setUpFV(opt, conf);\n  }\n\n  /**\n   * Sets the validation attributes on the form's fields then validates\n   * @param {JSONConfig} json Form's Validation configuration\n   * @param {?Options} [options] Validation options\n   */\n  public fromJSON(json: JSONConfig, options?: Options): void {\n    const forms = Object.keys(json);\n    if (forms.length == 0) return;\n    const frm = json[0];\n    if (!frm) return;\n    const form = document.querySelector<HTMLFormElement>(Object.keys(json)[0]);\n    if (!form) {\n      console.error(\n        `FormValidator: Failed to set the validation config on the from, '${\n          Object.keys(json)[0]\n        }' can not be found.`\n      );\n      return;\n    }\n    const opt = { ...this.opt, ...options },\n      conf = this.conf;\n    opt.form = Object.keys(json)[0];\n    for (const fld in frm) {\n      const field = form.querySelector<ValidationField>(fld);\n      if (!field) {\n        console.error(\n          `FormValidator: Failed to set the validation on the field, '${fld}' can not be found.`\n        );\n        continue;\n      }\n      const element = frm[fld];\n      if (element.validators)\n        field.setAttribute(opt.fieldValidateAttribute, element.validators);\n      if (element.modifiers)\n        field.setAttribute(opt.fieldModifyAttribute, element.modifiers);\n      for (const dt in element.dataFV) {\n        const data = element.dataFV[dt];\n        const dt_fv = dt.includes(\"data-fv-\") ? dt : `data-fv-${dt}`;\n        field.setAttribute(dt_fv, data);\n      }\n    }\n    this.setUpFV(opt, conf);\n  }\n\n  /**\n   * Adds an Form Validator event to the field\n   * @param {string} event Event name\n   * @param {string} field Field id\n   * @param {ValidatorEvent} eventFunction Event function\n   */\n  public addFormValidationEvent(\n    event: string,\n    field: string,\n    eventFunction: ValidatorEvent\n  ): void {\n    const element = document.getElementById(field) as ValidationField;\n    if (element) {\n      switch (event) {\n        case \"beforeValidate\":\n          configuration.onBeforeValidate[element.name].push(eventFunction);\n          break;\n        case \"valid\":\n          configuration.onValid[element.name].push(eventFunction);\n          break;\n        case \"invalid\":\n          configuration.onInvalid[element.name].push(eventFunction);\n          break;\n        case \"afterValidate\":\n          configuration.onAfterValidate[element.name].push(eventFunction);\n          break;\n        default:\n          console.error(\n            `FormValidator: Failed to add the event, '${event}' is not a valid event.`\n          );\n          break;\n      }\n    } else {\n      console.error(\n        `FormValidator: Failed to add the event,  the field named '${field}' cant not be found.`\n      );\n    }\n  }\n\n  /**\n   * Adds a validator to the global config\n   * @param {Validator} validator Validator config\n   */\n  public addValidator(validator: Validator): void {\n    const list = Object.keys(this.conf.validators);\n    if (list.includes(validator.name)) {\n      console.error(\n        `FormValidator: Failed to add the validator, the name '${validator.name}' is already in use.`\n      );\n      return;\n    }\n    this.conf.validators[validator.name] = validator;\n  }\n\n  /**\n   * Adds an async validator to the global config\n   * @param {AsyncValidator} validator Validator config\n   */\n  public addAsyncValidator(validator: AsyncValidator): void {\n    const list = Object.keys(this.conf.asyncValidators);\n    if (list.includes(validator.name)) {\n      console.error(\n        `FormValidator: Failed to add the validator, the name '${validator.name}' is already in use.`\n      );\n      return;\n    }\n    this.conf.asyncValidators[validator.name] = validator;\n  }\n\n  /**\n   * Adds a modifier to the global config\n   * @param {Modifier} modifier Modifier config\n   */\n  public addModifier(modifier: Modifier): void {\n    const list = Object.keys(this.conf.modifiers);\n    if (list.includes(modifier.name)) {\n      console.error(\n        `FormValidator: Failed to add the modifier, the name '${modifier.name}' is already in use.`\n      );\n      return;\n    }\n    this.conf.modifiers[modifier.name] = modifier;\n  }\n\n  /**\n   * Restricts typed characters of the input\n   * @param {(string | HTMLInputElement)} input Input element or input id to restrict\n   * @param {string} type Accepted types of characters (numbers, letters, text, all, none)\n   * @param {?string} [reject] Additional rejected characters\n   * @param {?string} [accept] Additional accepted characters\n   */\n  public restrict(\n    input: string | HTMLInputElement,\n    type: string,\n    reject?: string,\n    accept?: string\n  ): void {\n    let i: HTMLInputElement | null = null;\n    if (!(input instanceof HTMLInputElement)) {\n      i = document.querySelector<HTMLInputElement>(`#${input}`);\n      if (i) input = i;\n      else {\n        console.error(\n          `FormValidator: Failed to set the characters restriction on the input, '${input}' can not be found.`\n        );\n        return;\n      }\n    }\n    if (reject) reject = escapeRegExp(reject);\n    if (accept) accept = escapeRegExp(accept);\n    let acceptRegexp: RegExp;\n    switch (type) {\n      case \"numbers\":\n        acceptRegexp = new RegExp(`[0-9${accept ?? \"\"}]`);\n        break;\n      case \"letters\":\n        acceptRegexp = new RegExp(`[a-zA-Z${accept ?? \"\"}]`);\n        break;\n      case \"text\":\n        acceptRegexp = new RegExp(`[a-zA-Z0-9\\\\s\\\\,\\\\;\\\\.${accept ?? \"\"}]`);\n        break;\n      case \"none\":\n        acceptRegexp = new RegExp(`[${accept ?? \"\"}]`);\n        break;\n      default:\n        acceptRegexp = /[.]/;\n        break;\n    }\n    const acceptDefault = [\n      \"ArrowUp\",\n      \"ArrowDown\",\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Enter\",\n      \"Backspace\",\n      \"Delete\",\n      \"Control\",\n      \"Shift\",\n      \"CapsLock\",\n      \"Tab\",\n      \"AltGraph\",\n      \"Home\",\n      \"End\",\n      \"PageUp\",\n      \"PageDown\",\n    ];\n    const rejectRegexp = new RegExp(`[${reject}]`);\n    input.addEventListener(\"keydown\", function (e) {\n      if (\n        !acceptDefault.includes(e.key) &&\n        (!acceptRegexp.test(e.key) || rejectRegexp.test(e.key))\n      )\n        e.preventDefault();\n    });\n    input.addEventListener(\"input\", function (e) {\n      if (!acceptRegexp.test(input.value) || rejectRegexp.test(input.value))\n        input.value = input.value.replace(\n          new RegExp(`[^${acceptRegexp.source}]`, \"g\"),\n          \"\"\n        );\n      input.value = input.value.replace(\n        new RegExp(`[${rejectRegexp.source}]`, \"g\"),\n        \"\"\n      );\n    });\n  }\n}\n\n/**\n * Validates form field contents before submission.\n * @param {?Options} [options] Form validation options\n * @param {?Lang} [lang] Form validation language\n * @returns {FormValidate} Form validation\n */\nexport function FormValidator(options?: Options, lang?: Lang): FormValidate {\n  return new FormValidate(options, lang);\n}\n//#endregion FormValidator\n"],"mappings":"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","ignoreList":[]}