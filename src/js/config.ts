import type {
  Options,
  Configuration,
  Lang,
  TelephoneFormats,
  CardInfo,
} from "./types";

export const options: Options = {
  ignoredFieldsNames: "",
  validMessageClass: "valid-feedback",
  invalidMessageClass: "invalid-feedback",
  validClass: "is-valid",
  invalidClass: "is-invalid",
  validParentClass: "Valid",
  invalidParentClass: "Invalid",
  inlineMessageClass: "fv-msg",
  topMessagesClass: "alert",
  validMessagesClass: "alert-success",
  invalidMessagesClass: "alert-danger",
  validMessagesPosition: "inline",
  invalidMessagesPosition: "inline",
  topMessagesTemplate: `<div class="fv-top-messages {topMessagesClass} {valid_invalid}"><h4>{title}</h4><ul>{fields&messagesList}</ul></div>`,
  scrollToTopOnInvalid: false,
  addValidClassOnAll: false,
  validateHiddenFields: false,
  validMessageCallback: undefined,
  invalidMessageCallback: undefined,
  form: "form",
  parentField: "fv-group",
  fieldModifyAttribute: "data-modify_list",
  fieldValidateAttribute: "data-validate_list",
  fieldInvalidMessageAttribute: "data-validate-invalid_message",
  fieldValidMessageAttribute: "data-validate-valid_message",
  fieldHelpMessageAttribute: "data-validate-help_message",
  validateOnInput: false,
  validateOnBlur: true,
  validateCheckboxRadioOnClick: true,
  showHelpMessagesOnFocus: true,
  addSuggestions: true,
  suggestionConfig: {
    maxHeight: "150px",
    containerClass: "fv-suggestion_container",
    optionClass: "fv-suggestion_option",
  },
  suggestionAttribute: "data-suggestions",
  lengthRestrictAttribute: "data-length_restrict",
  lengthRestrictInfo: "count",
  passwordSpecialChars: /(\x21\x40\x23\x24\x25\x5E\x26\x2A\x5F\x2D\x2B\x3D)/,
  passwordInfoClass: "card",
};

export const language: Lang = {
  locale: "en-US",
  currencyCode: "USD",
  dateFormat: "YYYY-MM-DD",
  timeFormat: "HH:mm:ss",
  validTitle: "Valid form!",
  invalidTitle: "Invalid form!",
  notConfirmed: "Could not be validated.",
  required: "Is required.",
  invalidDate: "Is not a valid date.",
  invalidTime: "Is not a valid time.",
  invalidTelephone: "Is not a valid phone number.",
  invalidIPv4: "Is not a valid IPv4 address.",
  invalidIPv6: "Is not a valid IPv6 address.",
  invalidDomain: "Is not a valid domain.",
  invalidEmail: "Is not a valid e-mail address.",
  invalidUrl: "Is not a valid URL.",
  invalidNumber: "Is not a valid number.",
  invalidNumberMax: "Must be less than or equal to {max}.",
  invalidNumberMin: "Must be greater than or equal to {mix}.",
  invalidNumberRange: "Must match the range {range}.",
  invalidNumberEqual: "Must be equal to {equal}.",
  invalidNumberStep: "Must increase by {step}.",
  invalidLengthMax:
    "Must 1[have]1|2[choose]2 a maximum of {max} 3[character(s)]3|4[file(s)]4|5[option(s)]5.",
  invalidLengthMin:
    "Must 1[have]1|2[choose]2 a minimum of {min} 3[character(s)]3|4[file(s)]4|5[option(s)]5.",
  invalidLengthRange:
    "Must 1[have]1|2[choose]2 between {min} and {max} 3[characters]3|4[files]4|5[options]5.",
  invalidLengthEqual:
    "Must 1[have]1|2[choose]2 {equal} 3[character(s)]3|4[file(s)]4|5[option(s)]5.",
  invalidLetters: "Can oly contain letters.[ Also can contain {extra}]",
  invalidCustomVal: "Is not a valid value.",
  invalidAlphaNumeric:
    "Can only contain letters and numbers.[ Also can contain {extra}]",
  invalidColor: "Is not a valid color format.",
  invalidFileSize: "File(s) size is too large (max: {max}).",
  invalidFileType: "File(S) type must be: {type}.",
  invalidFileExtension: "File(s) extension must be: {extension}.",
  invalidImageDim: "Image(s) dimensions are not valid.",
  invalidImageHeigh: "Image(S) heigh must not exceed: {max}px.",
  invalidImageWidth: "Image(s) width must not exceed: {max}px.",
  invalidImageRatio: "Image aspect ratio is not valid.",
  invalidCreditCardNumber: "Credit card number is not valid.",
  invalidCVV: "CVV number is not valid.",
  invalidConfirmationValue: "The [values] do not match.",
  invalidSecurityAnswer: "Security question answer is not valid.",
  invalidStrength: "Password is not strong enough.",
  passwordConditionsTitle: "Password must contain:",
  passwordConditionUppercase: "Uppercase letter(s).",
  passwordConditionLowercase: "Lowercase letter(s).",
  passwordConditionSpecialChars: "Special character(s).",
  passwordConditionNumericChars: "Numeric character(s).",
  passwordConditionLength: "At least 8 characters.",
  passwordStrengthVeryWeak: "Very weak &#x1F628;",
  passwordStrengthWeak: "Weak &#x1F61E;",
  passwordStrengthNormal: "Normal &#x1F610;",
  passwordStrengthStrong: "Strong &#x1F601;",
  passwordStrengthVeryStrong: "Very Strong &#x1F60E;",
};

export const configuration: Configuration = {
  validators: {},
  modifiers: {},
  stopValidation: false,
  onBeforeValidate: undefined,
  onValid: undefined,
  onInvalid: undefined,
  onAfterValidate: undefined,
  validMessages: {},
  invalidMessages: {},
  language: language,
};

export const telephoneFormats: TelephoneFormats = {
  EC: [
    /^(?:0|\x2B593\s)(?:(?:[2-7]\s)?|(?:\d{2}(?:\s|-)?))\d{3}(?:\s|-)?\d{4}$/,
  ],
};

export const cardInfo: CardInfo = {
  AMEX: { first: [3], length: { min: 15, max: 15 }, cvv: 4 },
  VISA: { first: [4], length: { min: 16, max: 16 }, cvv: 3 },
  MASTERCARD: { first: [5], length: { min: 16, max: 16 }, cvv: 3 },
  DISCOVER: { first: [6], length: { min: 16, max: 16 }, cvv: 3 },
};
