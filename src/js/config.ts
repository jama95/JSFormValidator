import type { Options, Configuration, Lang } from "./types";

export const options: Options = {
  ignoredFieldsNames: [],
  validMessageClass: "valid-feedback",
  invalidMessageClass: "invalid-feedback",
  validClass: "is-valid",
  invalidClass: "is-invalid",
  validParentClass: "Valid",
  invalidParentClass: "Invalid",
  inlineMessageClass: "fv-msg",
  topMessagesClass: "alert",
  validMessagesClass: "alert-success",
  invalidMessagesClass: "alert-danger",
  validMessagesPosition: "inline",
  invalidMessagesPosition: "inline",
  topMessagesTemplate: `<div class="fv-top-messages {topMessagesClass} {valid_invalid}"><h4>{title}</h4><ul>{fields&messagesList}</ul></div>`,
  scrollToTopOnInvalid: false,
  addValidClassOnAll: false,
  validateHiddenFields: false,
  validMessageCallback: undefined,
  invalidMessageCallback: undefined,
  form: "form",
  parentField: "fv-group",
  fieldModifyAttribute: "data-modifyList",
  fieldValidateAttribute: "data-validateList",
  fieldInvalidMessageAttribute: "data-validate-invalidMessage",
  fieldValidMessageAttribute: "data-validate-validMessage",
  fieldHelpMessageAttribute: "data-validate-helpMessage",
  validateOnInput: false,
  validateOnBlur: true,
  validateCheckboxRadioOnClick: true,
  showHelpMessagesOnFocus: true,
  addSuggestions: true,
  suggestionConfig: {
    maxHeight: "150px",
    containerClass: "fv-suggestion_container",
    optionClass: "fv-suggestion_option",
  },
  suggestionAttribute: "data-suggestions",
  lengthRestrictAttribute: "data-lengthRestrict",
  lengthRestrictInfo: "count",
  passwordSpecialChars: /[@%+\u005C/!#$^?:.(){}\u005B\u005D~_-]/,
  passwordInfoClass: "card",
};

export const language: Lang = {
  locale: "en-US",
  currencyCode: "USD",
  decimal: ",",
  dateFormat: "YYYY-MM-DD",
  timeFormat: "HH:mm:ss",
  validTitle: "Valid form!",
  invalidTitle: "Invalid form!",
  notConfirmed: "Could not be validated.",
  required: "Is required.",
  invalidTime: "Is not a valid time.",
  invalidEmail: "Is not a valid e-mail address.",
  invalidTelephone: "Is not a valid phone number.",
  invalidDate: "Is not a valid date.",
  invalidDomain: "Is not a valid domain.",
  invalidUrl: "Is not a valid URL.",
  invalidNumber: "Is not a valid number.",
  invalidNumberMax: "Must be less than or equal to {max}.",
  invalidNumberMin: "Must be greater than or equal to {mix}.",
  invalidNumberRange: "Must match the range {range}.",
  invalidNumberEqual: "Must be equal to {equal}.",
  invalidNumberStep: "Must increase by {step}.",
  invalidLengthMax:
    "Must 1[have]1|2[choose]2 a maximum of {max} 3[character(s)]3|4[file(s)]4|5[option(s)]5.",
  invalidLengthMin:
    "Must 1[have]1|2[choose]2 a minimum of {min} 3[character(s)]3|4[file(s)]4|5[option(s)]5.",
  invalidLengthRange:
    "Must 1[have]1|2[choose]2 between {min} and {max} 3[characters]3|4[files]4|5[options]5.",
  invalidLengthEqual:
    "Must 1[have]1|2[choose]2 {equal} 3[character(s)]3|4[file(s)]4|5[option(s)]5.",
  invalidLetters: "Can oly contain letters.[ Also can contain {extra}]",
  invalidCustomVal: "Is not a valid value.",
  invalidAlphaNumeric:
    "Can only contain letters and numbers.[ Also can contain {extra}]",
  invalidFileSize: "File size is too large (max: {max}).",
  invalidFileType: "File type must be {type}.",
  invalidImageDim: "Image dimensions are incorrect.",
  imageTooTall: "Image heigh must not exceed {max}px.",
  imageTooWide: "Image width must not exceed {max}px.",
  imageTooSmall: "Image too small.",
  imageRatioNotAccepted: "Image ratio is not correct",
  invalidCreditCard: "Credit card number is not correct.",
  invalidCVV: "CVV number is not correct.",
  invalidSecurityAnswer: "Security question answer is incorrect.",
  invalidStrength: "Password is not strong enough.",
  passwordConditionsTitle: "Password must contain:",
  passwordConditionUppercase: "Uppercase letter(s).",
  passwordConditionLowercase: "Lowercase letter(s).",
  passwordConditionSpecialChars: "Special character(s).",
  passwordConditionNumericChars: "Numeric character(s).",
  passwordConditionLength: "At least 8 characters.",
  passwordStrengthVeryWeak: "Very weak &#128552;",
  passwordStrengthWeak: "Weak &#128542;",
  passwordStrengthNormal: "Normal &#128528;",
  passwordStrengthStrong: "Strong &#128513;",
  passwordStrengthVeryStrong: "Very Strong &#128526;",
};

export const configuration: Configuration = {
  validators: {},
  modifiers: {},
  stopValidation: false,
  onBeforeValidate: undefined,
  onValid: undefined,
  onInvalid: undefined,
  onAfterValidate: undefined,
  validMessages: {},
  invalidMessages: {},
  language: language,
};
