import type { Options, Configuration, Lang } from "./types";

export const options: Options = {
  ignoredFieldsNames: [],
  validMessageClass: "validMessage",
  invalidMessageClass: "invalidMessage",
  validClass: "valid",
  invalidClass: "invalid",
  validParentClass: "isValid",
  invalidParentClass: "isInvalid",
  inlineMessageClass: "inlineMessageClass",
  topMessagesClass: "topMessagesClass",
  validMessagesClass: "validMessagesClass",
  invalidMessagesClass: "invalidMessagesClass",
  validMessagesPosition: "inline",
  invalidMessagesPosition: "inline",
  topMessagesTemplate: `<div class="{topMessagesClass} {valid_invalid}"><strong>{title}</strong><ul>{fields&messagesList}</ul></div>`,
  scrollToTopOnInvalid: false,
  addValidClassOnAll: false,
  validateHiddenInputs: false,
  validMessageCallback: undefined,
  invalidMessageCallback: undefined,
  dateFormat: "YYYY-MM-DD",
  form: "form",
  parentField: "",
  fieldModifyAttribute: "data-modifyList",
  fieldValidateAttribute: "data-validateList",
  fieldInvalidMessageAttribute: "data-validate-invalidMessage",
  fieldValidMessageAttribute: "data-validate-validMessage",
  fieldHelpMessageAttribute: "data-validate-helpMessage",
  validateOnInput: false,
  validateOnBlur: true,
  validateCheckboxRadioOnClick: true,
  showHelpMessagesOnFocus: true,
  addSuggestions: true,
  suggestionConfig: {
    maxHeight: "150px",
    containerClass: "fv-suggestion_container",
    optionClass: "fv-suggestion_option",
  },
  suggestionAttribute: "data-suggestions",
  lengthRestrictAttribute: "data-lengthRestrict",
  lengthRestrictInfo: "count",
};

export const language: Lang = {
  validTitle: "Form submission successfully!",
  invalidTitle: "Form submission failed!",
  required: "This field is required",
  invalidTime: "The time given is incorrect.",
  invalidEmail: "The e-mail address given is incorrect",
  invalidTelephone: "The phone number given is incorrect",
  invalidSecurityAnswer: "The answer to the security question is incorrect",
  invalidDate: "The date given is incorrect.",
  invalidLength: "The input value must be between {range} characters",
  lengthTooLongStart: "The input value is longer than ",
  lengthTooShortStart: "The input value is shorter than ",
  notConfirmed: "The input values could not be confirmed",
  invalidDomain: "The domain given is incorrect",
  invalidUrl: "The URL given is incorrect",
  invalidCustomVal: "The input value is incorrect",
  andSpaces: " and spaces ",
  invalidNumber: "The input value is not a valid number",
  invalidStrength: "The password is not strong enough",
  invalidNumberOfSelectedOptions: "You must choose at least {options} answers",
  invalidAlphaNumeric: "The input value can only contain letters and numbers ",
  invalidAlphaNumericExtra: " and ",
  invalidFileSize: "The file you are trying to upload is too large (max %s)",
  invalidFileType: "Only files of type %s are allowed",
  groupCheckedRangeStart: "Please choose between {range} item(s)",
  groupCheckedTooFewStart: "Please choose at least {number} item(s)",
  groupCheckedTooManyStart: "Please choose a maximum of {number} item(s)",
  invalidCreditCard: "The credit card number is not correct",
  invalidCVV: "The CVV number is not correct",
  invalidImageDim: "Incorrect image dimensions,",
  imageTooTall: "the image can not be taller than",
  imageTooWide: "the image can not be wider than",
  imageTooSmall: "the image was too small",
  min: "min",
  max: "max",
  imageRatioNotAccepted: "Image ratio is not be accepted",
  passwordComplexityStart: "Password must contain:",
  passwordComplexityUppercaseInfo: "Uppercase letter(s)",
  passwordComplexityLowercaseInfo: "Lowercase letter(s)",
  passwordComplexitySpecialCharsInfo: "Special character(s)",
  passwordComplexityNumericCharsInfo: "Numeric character(s)",
  locale: "en-US",
  currencyCode: "USD",
  decimal: ",",
};

export const configuration: Configuration = {
  validators: {},
  modifiers: {},
  stopValidation: false,
  onBeforeValidate: undefined,
  onValid: undefined,
  onInvalid: undefined,
  onAfterValidate: undefined,
  validMessages: {},
  invalidMessages: {},
  language: language,
};
